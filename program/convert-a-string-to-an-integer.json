{"slug":"convert-a-string-to-an-integer","title":"Convert a string to an integer","trackId":4403,"tags":["Java","JavaScript","Kotlin","Python","GO"],"contributors":["harshraj8843","sureshsgith","mrajen27","avireni","AryanKansagara","brundabharadwaj"],"contentHtml":"<h2>Write a program to convert a string to an integer</h2>\n<pre><code>Input  : \"123\"\nOutput : 123\n</code></pre>\n<hr>\n<pre><code>import java.util.Scanner;\npublic class ConvertAStringToAnInteger {\n\n\tpublic static void main(String[] args)\n\t{\n\t\tScanner sc = new Scanner(System.in);\n\t\ttry{\n\t\t    System.out.print(\"Enter the string that needs to be converted to INT: \");\n\t\t    String string = sc.nextLine();\n\t\t    sc.close();\n\t\t    Integer intVal = Integer.valueOf(string);\n\t\t    System.out.print(\"Value converted is: \" + intVal);\n\n\t\t}catch(Exception e){\n\t\t    System.out.println(\"Invalid input: \" + e);\n\t\t}\n\t}\n}\n</code></pre>\n<pre><code>// Javascript program to convert a String to an Integer\n\nfunction convertWithUnary(str) {\n    // converts string representations of integers or decimals\n    return +str;\n}\n\nfunction parseInteger(str, radix = 0) {\n    // radix is an integer between 2 - 36\n    return parseInt(str, radix);\n}\n\nfunction floor(str) {\n    return Math.floor(str);\n}\n\nfunction round(str) {\n    return Math.round(str);\n}\n\n\n// Examples:\n\nconsole.log(convertWithUnary(\"2342\")); // 2342\nconsole.log(convertWithUnary(\"234.67\")); // 234.67\n\nconsole.log(Number('1234')); // 1234 - native JS Number Method\nconsole.log(~~'1234') // 1234 - Double Tilde - bitwise negation\n\nconsole.log(parseInteger('321')); // 321\nconsole.log(parseInteger('234.33')) // 234\nconsole.log(parseInteger('6234sadf')) // 6234 - converts numbers in the string untill alphabets/special characters are found\nconsole.log(parseInteger('0xD')); // 13 - converts 0xD hexadecimal-base 16 with Decimal base 10\nconsole.log(parseInteger('0xD', 2)); // 0 - converts 0xD hexadecimal with radix 2\nconsole.log(parseInteger('0xD', 36)); // 1201 - converts 0xD hexadecimal with radix 36\nconsole.log(parseInteger('0xD', 42)); // NaN - returns Nan with radix out of range\n\nconsole.log(floor('234.234')) // 234 // rounds down to the integer less than or equal to the given value\nconsole.log(floor('234.999')) // 234 // rounds down to the integer less than or equal to the given value\nconsole.log(floor('234adf.234')) // NaN // works only on string representations of numbers\n\nconsole.log(round('234.234')) // 234 // rounds to the nearest integer\nconsole.log(round('234.999')) // 235 // rounds to the nearest integer\nconsole.log(round('234adf.234')) // NaN // works only on string representations of numbers\n</code></pre>\n<pre><code>import java.util.Scanner\nfun main() {\n    val scanner = Scanner(System.`in`)\n    print(\"Enter the string::\")\n    val inputString = scanner.nextLine();\n    scanner.close();\n    try {\n        val integer = inputString.toInt();\n        print(\"Integer value is::\"+integer)\n    } catch(exe:NumberFormatException) {\n        print(\"Invalid Input\")\n    }\n}\n</code></pre>\n<pre><code>n = input()\nnumber = int(input())\nprint(number)\n</code></pre>\n<pre><code>package main\n\nimport (\n\t\"fmt\"\n\t\"strconv\"\n)\n\nfunc StrtoInt(s string) int {\n\t//converting string to int\n\n\tnum,err:=strconv.Atoi(s)\n\n\tif err!=nil{\n\t\tfmt.Println(err)\n\t}\n\n\t//returing number\n\n\treturn num\n}\n\nfunc main(){\n\tfmt.Printf(\"Enter a String number:\")\n\tvar s string\n\tfmt.Scanf(\"%v\",&#x26;s)\n\t//printing the output\n\tfmt.Println(\"After converting str to int:\",StrtoInt(s))\n}\n</code></pre>\n","markdown":"\n## Write a program to convert a string to an integer\n\n```\nInput  : \"123\"\nOutput : 123\n```\n\n---\n\n<CodeBlock slug=\"convert-a-string-to-an-integer\" >\n\n```java\nimport java.util.Scanner;\npublic class ConvertAStringToAnInteger {\n\n\tpublic static void main(String[] args)\n\t{\n\t\tScanner sc = new Scanner(System.in);\n\t\ttry{\n\t\t    System.out.print(\"Enter the string that needs to be converted to INT: \");\n\t\t    String string = sc.nextLine();\n\t\t    sc.close();\n\t\t    Integer intVal = Integer.valueOf(string);\n\t\t    System.out.print(\"Value converted is: \" + intVal);\n\n\t\t}catch(Exception e){\n\t\t    System.out.println(\"Invalid input: \" + e);\n\t\t}\n\t}\n}\n```\n\n```js\n// Javascript program to convert a String to an Integer\n\nfunction convertWithUnary(str) {\n    // converts string representations of integers or decimals\n    return +str;\n}\n\nfunction parseInteger(str, radix = 0) {\n    // radix is an integer between 2 - 36\n    return parseInt(str, radix);\n}\n\nfunction floor(str) {\n    return Math.floor(str);\n}\n\nfunction round(str) {\n    return Math.round(str);\n}\n\n\n// Examples:\n\nconsole.log(convertWithUnary(\"2342\")); // 2342\nconsole.log(convertWithUnary(\"234.67\")); // 234.67\n\nconsole.log(Number('1234')); // 1234 - native JS Number Method\nconsole.log(~~'1234') // 1234 - Double Tilde - bitwise negation\n\nconsole.log(parseInteger('321')); // 321\nconsole.log(parseInteger('234.33')) // 234\nconsole.log(parseInteger('6234sadf')) // 6234 - converts numbers in the string untill alphabets/special characters are found\nconsole.log(parseInteger('0xD')); // 13 - converts 0xD hexadecimal-base 16 with Decimal base 10\nconsole.log(parseInteger('0xD', 2)); // 0 - converts 0xD hexadecimal with radix 2\nconsole.log(parseInteger('0xD', 36)); // 1201 - converts 0xD hexadecimal with radix 36\nconsole.log(parseInteger('0xD', 42)); // NaN - returns Nan with radix out of range\n\nconsole.log(floor('234.234')) // 234 // rounds down to the integer less than or equal to the given value\nconsole.log(floor('234.999')) // 234 // rounds down to the integer less than or equal to the given value\nconsole.log(floor('234adf.234')) // NaN // works only on string representations of numbers\n\nconsole.log(round('234.234')) // 234 // rounds to the nearest integer\nconsole.log(round('234.999')) // 235 // rounds to the nearest integer\nconsole.log(round('234adf.234')) // NaN // works only on string representations of numbers\n```\n\n```kt\nimport java.util.Scanner\nfun main() {\n    val scanner = Scanner(System.`in`)\n    print(\"Enter the string::\")\n    val inputString = scanner.nextLine();\n    scanner.close();\n    try {\n        val integer = inputString.toInt();\n        print(\"Integer value is::\"+integer)\n    } catch(exe:NumberFormatException) {\n        print(\"Invalid Input\")\n    }\n}\n```\n\n```py\nn = input()\nnumber = int(input())\nprint(number)\n```\n\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"strconv\"\n)\n\nfunc StrtoInt(s string) int {\n\t//converting string to int\n\n\tnum,err:=strconv.Atoi(s)\n\n\tif err!=nil{\n\t\tfmt.Println(err)\n\t}\n\n\t//returing number\n\n\treturn num\n}\n\nfunc main(){\n\tfmt.Printf(\"Enter a String number:\")\n\tvar s string\n\tfmt.Scanf(\"%v\",&s)\n\t//printing the output\n\tfmt.Println(\"After converting str to int:\",StrtoInt(s))\n}\n```\n\n</CodeBlock>\n\n","latestUpdateDate":"2022-11-25T05:16:26Z"}