{"slug":"print-fibonacci-series-by-recursion","title":"Print Fibonacci series by recursion","trackId":1489,"tags":["C","C++","Java","JavaScript","Kotlin","TypeScript","Python","PHP"],"contributors":["anandfresh","joao-vitor-souza","harshraj8843","Badboy-16","vedha-vikash-pixel","UsmanFani","jyotik09","grraghav120","PraaneshSelvaraj"],"contentHtml":"<h2>Write a program to print fibonacci series by recursion</h2>\n<pre><code>Input  : 5\r\nOutput : 0 1 1 2 3\n</code></pre>\n<hr>\n<pre><code>#include &#x3C;stdio.h>\n\nconst int num_one = 0;\nconst int num_two = 1;\n\nint main() {\n    int input;\n    printf(\"Input  : \");\n    scanf(\"%d\", &#x26;input);\n    switch (input) {\n        case 1:\n            printf(\"Output : 0\");\n            break;\n        case 2:\n            printf(\"Output : 0 1\");\n            break;\n        default: /* for more than 2 numbers */\n            int two_num_ago = num_one;\n            int one_num_ago = num_two;\n            int next_num = num_one + num_two;\n\n            /* print first two numbers first */\n            printf(\"Output : 0 1 \");\n\n            /* iteration starts from third number */\n            for (int i = 0; i &#x3C; input - 2; i++) {\n                printf(\"%d \", next_num);\n\n                /* finding next number for next iteration */\n                two_num_ago = one_num_ago;\n                one_num_ago = next_num;\n                next_num = one_num_ago + two_num_ago;\n\n            }\n    }\n    printf(\"\\n\");\n    return 0;\n}\n</code></pre>\n<pre><code>//PrintFibonacciSeriesByRecursion.cpp\n#include &#x3C;iostream>\n\nusing namespace std;\n\nvoid PrintFibonacciSeriesByRecursion(int n,int a,int b){\n    int c;\n    if(n>=1){\n        c=a+b;\n        a=b;\n        b=c;\n        cout&#x3C;&#x3C;c&#x3C;&#x3C;\" \";\n        PrintFibonacciSeriesByRecursion(n-1,a,b);\n    }\n}\n\nint main()\n{\n    int n;cin>>n;\n    cout&#x3C;&#x3C;0&#x3C;&#x3C;\" \"&#x3C;&#x3C;1&#x3C;&#x3C;\" \";\n    PrintFibonacciSeriesByRecursion(n-2,0,1);\n}\n\n//Contributed by Raghav Garg\n</code></pre>\n<pre><code>public class print_fibonacci_series_by_recursion{\n \n    public static void main(String args[]){\n                \n        int n = 5;\n        for(int i=0;i&#x3C;n;i++){                                     //prints the numbers  \n            System.out.println(fibonacci(i) + \" \");               // 0 1 1 2 3\n        }\n        \n    }\n    \n    public static int fibonacci(int i){              //recursive function to get fibonacci numbers\n        if(i == 0){\n            return 0;\n        }\n        if(i == 1){\n            return 1;\n        }        \n        return fibonacci(i - 1) + fibonacci(i - 2);\n    }    \n    \n}\n</code></pre>\n<pre><code>function getFiboNumber(n){\n    if(n &#x3C;= 1){\n        return n;\n    } else {\n        return getFiboNumber(n-1) + getFiboNumber(n-2);\n    }\n}\n\nlet input = 5;\nlet output = '';\nfor(let i=0; i &#x3C; input; i++){\n    output = output + \" \" + getFiboNumber(i);\n}\nconsole.log(output);\n</code></pre>\n<pre><code>fun main() {\n    print(\"Enter No. to Print Fibonacci: \")\n    val num = readln().toInt()\n    print(\"Fibonacci Series of $num is: ${fibonacciRecursion(num).asList()}\")\n}\n\nprivate fun fibonacciRecursion(num: Int): IntArray {\n    val arr = IntArray(num)\n    fib(num, arr)\n    return arr\n}\n\nprivate fun fib(num: Int, arr: IntArray): Int {\n    if (num &#x3C;= 1) {\n        arr[0] = 0\n        return 0\n    }\n    if (num == 2) {\n        arr[1] = 1\n        return 1\n    }\n    if (arr[num - 1] != 0) return arr[num - 1]\n    arr[num - 1] = fib(num - 1, arr) + fib(num - 2, arr)\n    return arr[num - 1]\n}\n</code></pre>\n<pre><code>function getFiboNumber(n: number): number{\n    if(n &#x3C;= 1){\n        return n;\n    } else {\n        return getFiboNumber(n-1) + getFiboNumber(n-2);\n    }\n}\n\nconst input: number = 5;\nlet output: string = '';\nfor(let i=0; i &#x3C; input; i++){\n    output = output + \" \" + getFiboNumber(i);\n}\nconsole.log(output);\n</code></pre>\n<pre><code>def fibonacci(n):\n    if n &#x3C;= 1:\n        return n\n    else:\n        return fibonacci(n - 1) + fibonacci(n - 2)\n\n\nnumber = int(input())\nfor i in range(number):\n    print(fibonacci(i), end=\" \")\n</code></pre>\n<pre><code>&#x3C;?php  \n\nfunction fibonacciSeries($num){\n      \n    if ($num == 0)\n        return 0;    \n    else if ($num == 1)\n        return 1;    \n    else\n        return fibonacciSeries($num-1) + fibonacciSeries($num-2);\n}\n  \n$num = 5;\nfor ($counter = 0; $counter &#x3C; $num; $counter++){  \n    echo fibonacciSeries($counter),' ';\n}\n\n?>\n</code></pre>\n","markdown":"\n## Write a program to print fibonacci series by recursion\n\n```\r\nInput  : 5\r\nOutput : 0 1 1 2 3\r\n```\n\n---\n\n<CodeBlock slug=\"print-fibonacci-series-by-recursion\" >\n\n```c\n#include <stdio.h>\n\nconst int num_one = 0;\nconst int num_two = 1;\n\nint main() {\n    int input;\n    printf(\"Input  : \");\n    scanf(\"%d\", &input);\n    switch (input) {\n        case 1:\n            printf(\"Output : 0\");\n            break;\n        case 2:\n            printf(\"Output : 0 1\");\n            break;\n        default: /* for more than 2 numbers */\n            int two_num_ago = num_one;\n            int one_num_ago = num_two;\n            int next_num = num_one + num_two;\n\n            /* print first two numbers first */\n            printf(\"Output : 0 1 \");\n\n            /* iteration starts from third number */\n            for (int i = 0; i < input - 2; i++) {\n                printf(\"%d \", next_num);\n\n                /* finding next number for next iteration */\n                two_num_ago = one_num_ago;\n                one_num_ago = next_num;\n                next_num = one_num_ago + two_num_ago;\n\n            }\n    }\n    printf(\"\\n\");\n    return 0;\n}\n```\n\n```cpp\n//PrintFibonacciSeriesByRecursion.cpp\n#include <iostream>\n\nusing namespace std;\n\nvoid PrintFibonacciSeriesByRecursion(int n,int a,int b){\n    int c;\n    if(n>=1){\n        c=a+b;\n        a=b;\n        b=c;\n        cout<<c<<\" \";\n        PrintFibonacciSeriesByRecursion(n-1,a,b);\n    }\n}\n\nint main()\n{\n    int n;cin>>n;\n    cout<<0<<\" \"<<1<<\" \";\n    PrintFibonacciSeriesByRecursion(n-2,0,1);\n}\n\n//Contributed by Raghav Garg\n```\n\n```java\npublic class print_fibonacci_series_by_recursion{\n \n    public static void main(String args[]){\n                \n        int n = 5;\n        for(int i=0;i<n;i++){                                     //prints the numbers  \n            System.out.println(fibonacci(i) + \" \");               // 0 1 1 2 3\n        }\n        \n    }\n    \n    public static int fibonacci(int i){              //recursive function to get fibonacci numbers\n        if(i == 0){\n            return 0;\n        }\n        if(i == 1){\n            return 1;\n        }        \n        return fibonacci(i - 1) + fibonacci(i - 2);\n    }    \n    \n}\n```\n\n```js\nfunction getFiboNumber(n){\n    if(n <= 1){\n        return n;\n    } else {\n        return getFiboNumber(n-1) + getFiboNumber(n-2);\n    }\n}\n\nlet input = 5;\nlet output = '';\nfor(let i=0; i < input; i++){\n    output = output + \" \" + getFiboNumber(i);\n}\nconsole.log(output);\n```\n\n```kt\nfun main() {\n    print(\"Enter No. to Print Fibonacci: \")\n    val num = readln().toInt()\n    print(\"Fibonacci Series of $num is: ${fibonacciRecursion(num).asList()}\")\n}\n\nprivate fun fibonacciRecursion(num: Int): IntArray {\n    val arr = IntArray(num)\n    fib(num, arr)\n    return arr\n}\n\nprivate fun fib(num: Int, arr: IntArray): Int {\n    if (num <= 1) {\n        arr[0] = 0\n        return 0\n    }\n    if (num == 2) {\n        arr[1] = 1\n        return 1\n    }\n    if (arr[num - 1] != 0) return arr[num - 1]\n    arr[num - 1] = fib(num - 1, arr) + fib(num - 2, arr)\n    return arr[num - 1]\n}\n```\n\n```ts\nfunction getFiboNumber(n: number): number{\n    if(n <= 1){\n        return n;\n    } else {\n        return getFiboNumber(n-1) + getFiboNumber(n-2);\n    }\n}\n\nconst input: number = 5;\nlet output: string = '';\nfor(let i=0; i < input; i++){\n    output = output + \" \" + getFiboNumber(i);\n}\nconsole.log(output);\n```\n\n```py\ndef fibonacci(n):\n    if n <= 1:\n        return n\n    else:\n        return fibonacci(n - 1) + fibonacci(n - 2)\n\n\nnumber = int(input())\nfor i in range(number):\n    print(fibonacci(i), end=\" \")\n```\n\n```php\n<?php  \n\nfunction fibonacciSeries($num){\n      \n    if ($num == 0)\n        return 0;    \n    else if ($num == 1)\n        return 1;    \n    else\n        return fibonacciSeries($num-1) + fibonacciSeries($num-2);\n}\n  \n$num = 5;\nfor ($counter = 0; $counter < $num; $counter++){  \n    echo fibonacciSeries($counter),' ';\n}\n\n?>\n```\n\n</CodeBlock>\n\n","latestUpdateDate":"2022-12-16T05:40:12Z"}