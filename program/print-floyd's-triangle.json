{"slug":"print-floyd's-triangle","title":"Print Floyd's triangle","trackId":5487,"tags":["C++","Java","JavaScript","Ruby","TypeScript","Python","PHP"],"contributors":["anandfresh","harshraj8843","SarthakSanjay","CODE-Y02"],"contentHtml":"<h2>Write a program to print floyd's triangle</h2>\n<p>Floyd's triangle is a right-angled triangle of natural numbers, used in computer science as an example of a space-filling curve. It is named after Robert Floyd. It is defined by filling the rows of the triangle with consecutive numbers, starting with a 1 in the top left corner.</p>\n<pre><code>Input  : 5\n\nOutput : \n1\n2 3\n4 5 6\n7 8 9 10\n11 12 13 14 15\n</code></pre>\n<hr>\n<pre><code>#include &#x3C;bits/stdc++.h>\nusing namespace std;\n \nvoid printFloydTriangle(int n)\n{\n    int i, j, val = 1;\n    for (i = 1; i &#x3C;= n; i++)\n    {\n        for (j = 1; j &#x3C;= i; j++)\n            cout &#x3C;&#x3C; val++ &#x3C;&#x3C; \" \";\n        cout &#x3C;&#x3C; endl;\n    }\n}\n \nint main()\n{\n    printFloydTriangle(5);\n    return 0;\n}\n</code></pre>\n<pre><code>import java.util.Scanner;\nclass FloydTriangleExample\n{\n    public static void main(String args[])\n    {\n       int rows, number = 1, counter, j;\n       Scanner input = new Scanner(System.in);\n       System.out.println(\"Enter the number of rows for floyd's triangle\");\n       rows = input.nextInt();\n       System.out.println(\"Floyd's triangle\");\n       System.out.println(\"****************\");\n       for ( counter = 1 ; counter &#x3C;= rows ; counter++ )\n       {\n           for ( j = 1 ; j &#x3C;= counter ; j++ )\n           {\n                System.out.print(number+\" \");\n                number++;\n           }\n           System.out.println();\n       }\n   }\n}\n</code></pre>\n<pre><code>let printFloydsTriangle = (num) => {\r\n  let count = 1;\r\n\r\n  for (let i = 1; i &#x3C;= num; i++) {\r\n    let str = \"\";\r\n\r\n    for (let j = 1; j &#x3C;= i; j++) {\r\n      str = str + count + \" \";\r\n      count++;\r\n    }\r\n    console.log(str.trim());\r\n  }\r\n};\r\n\r\nprintFloydsTriangle(5);\n</code></pre>\n<pre><code>def floydsTriangle(rows)\n  max = (rows * (rows + 1)) / 2\n  widths = ((max - rows + 1)..max).map {|n| n.to_s.length + 1}\n  n = 0\n  rows.times do |r|\n   puts (0..r).map {|i| n += 1; \"%#{widths[i]}d\" % n}.join\n  end\nend\n\nfloydsTriangle(5)\n</code></pre>\n<pre><code>\"use strict\"\nconst floydsTriangle =  (n: number): number {\n    let count = 1;\n    for (let i = 1; i &#x3C;= n; i++) {\n        let str = \"\";\n        for (let j = 1; j &#x3C;= i; j++) {\n            str = str + count + \" \";\n            count++;\n        }\n        console.log(str.trim());\n    }\n};\nfloydsTriangle(5);\n</code></pre>\n<pre><code>rows = int(input(\"Enter no. of rows \"))\n\nnum = 1\nfor i in range(1, rows + 1):\n    for j in range(1, i + 1):\n        print(num, end=\" \")\n        num+=1\n    print()\n</code></pre>\n<pre><code>&#x3C;?php\n\nfunction floydsTriangle($n)\n{\n    $val = 1;\n     \n    for($i = 1; $i &#x3C;= $n; $i++)\n    {\n        for($j = 1; $j &#x3C;= $i; $j++)\n        {\n            print($val.\" \");\n            $val++;\n        }\n        print(\"\\n\");\n    }\n}\n \n\nfloydsTriangle(5);\n\n?>\n</code></pre>\n","markdown":"\n## Write a program to print floyd's triangle\n\nFloyd's triangle is a right-angled triangle of natural numbers, used in computer science as an example of a space-filling curve. It is named after Robert Floyd. It is defined by filling the rows of the triangle with consecutive numbers, starting with a 1 in the top left corner.\n\n```\nInput  : 5\n\nOutput : \n1\n2 3\n4 5 6\n7 8 9 10\n11 12 13 14 15\n```\n\n---\n\n<CodeBlock slug=\"print-floyd's-triangle\" >\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n \nvoid printFloydTriangle(int n)\n{\n    int i, j, val = 1;\n    for (i = 1; i <= n; i++)\n    {\n        for (j = 1; j <= i; j++)\n            cout << val++ << \" \";\n        cout << endl;\n    }\n}\n \nint main()\n{\n    printFloydTriangle(5);\n    return 0;\n}\n```\n\n```java\nimport java.util.Scanner;\nclass FloydTriangleExample\n{\n    public static void main(String args[])\n    {\n       int rows, number = 1, counter, j;\n       Scanner input = new Scanner(System.in);\n       System.out.println(\"Enter the number of rows for floyd's triangle\");\n       rows = input.nextInt();\n       System.out.println(\"Floyd's triangle\");\n       System.out.println(\"****************\");\n       for ( counter = 1 ; counter <= rows ; counter++ )\n       {\n           for ( j = 1 ; j <= counter ; j++ )\n           {\n                System.out.print(number+\" \");\n                number++;\n           }\n           System.out.println();\n       }\n   }\n}\n```\n\n```js\nlet printFloydsTriangle = (num) => {\r\n  let count = 1;\r\n\r\n  for (let i = 1; i <= num; i++) {\r\n    let str = \"\";\r\n\r\n    for (let j = 1; j <= i; j++) {\r\n      str = str + count + \" \";\r\n      count++;\r\n    }\r\n    console.log(str.trim());\r\n  }\r\n};\r\n\r\nprintFloydsTriangle(5);\n```\n\n```rb\ndef floydsTriangle(rows)\n  max = (rows * (rows + 1)) / 2\n  widths = ((max - rows + 1)..max).map {|n| n.to_s.length + 1}\n  n = 0\n  rows.times do |r|\n   puts (0..r).map {|i| n += 1; \"%#{widths[i]}d\" % n}.join\n  end\nend\n\nfloydsTriangle(5)\n```\n\n```ts\n\"use strict\"\nconst floydsTriangle =  (n: number): number {\n    let count = 1;\n    for (let i = 1; i <= n; i++) {\n        let str = \"\";\n        for (let j = 1; j <= i; j++) {\n            str = str + count + \" \";\n            count++;\n        }\n        console.log(str.trim());\n    }\n};\nfloydsTriangle(5);\n```\n\n```py\nrows = int(input(\"Enter no. of rows \"))\n\nnum = 1\nfor i in range(1, rows + 1):\n    for j in range(1, i + 1):\n        print(num, end=\" \")\n        num+=1\n    print()\n```\n\n```php\n<?php\n\nfunction floydsTriangle($n)\n{\n    $val = 1;\n     \n    for($i = 1; $i <= $n; $i++)\n    {\n        for($j = 1; $j <= $i; $j++)\n        {\n            print($val.\" \");\n            $val++;\n        }\n        print(\"\\n\");\n    }\n}\n \n\nfloydsTriangle(5);\n\n?>\n```\n\n</CodeBlock>\n\n","latestUpdateDate":"2023-01-01T16:23:51Z"}