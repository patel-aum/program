{"slug":"find-perimeter-of-a-square","title":"Find perimeter of a square","trackId":4239,"tags":["C","C++","Java","JavaScript","Ruby","TypeScript","Python","Scala","GO","Rust"],"contributors":["joao-vitor-souza","kituuu","sanmay321","plopez26DPU","rksp25","sureshsgith","PoweredByCaffein","grraghav120","BiscuitCandy","Greeshma-frontier","harshraj8843","ahasunos","manankarnik","SnehaNarendran01071998"],"contentHtml":"<h2>Write a program to find perimeter of a square</h2>\n<p>Perimeter of square = 4 × <code>Side</code></p>\n<pre><code>Side : 2\r\n\r\nPerimeter : 8\n</code></pre>\n<hr>\n<pre><code>#include &#x3C;stdio.h>\n#include &#x3C;setjmp.h> // For Exception Handling in C\n\njmp_buf savebuff;\n\n#define TRY if (setjmp(savebuff) == 0)\n#define CATCH else\n\n// Declaring a function with exception handling\nfloat calc_peri(float side);\n\n// Main function\nint main()\n{\n    float s;                                                  // Declaring Variable\n    printf(\"Enter the side of square to find perimeter: \\n\"); // Input prompt\n    scanf(\"%f\", &#x26;s);                                          // Reading input\n\n    TRY\n    {\n        printf(\"Perimeter of square is: %f\\n\", calc_peri(s));\n    }\n    CATCH\n    {\n        printf(\"ERROR!!! invalid input.\\n\");\n    }\n\n    return 0;\n}\n\nfloat calc_peri(float side)\n{\n    float peri;\n    peri = 4 * side;\n    if (side &#x3C; 0)\n    {\n        longjmp(savebuff, 1);\n    }\n\n    return peri;\n}\n</code></pre>\n<pre><code>// C++ Program to Find Perimeter of a Square\n#include &#x3C;iostream>\nusing namespace std;\n\nint main(){\n    int side, pm;\n    \n    // Taking input\n    cout &#x3C;&#x3C; \"Enter the side of the square   : \";\n    cin >> side;\n    \n    // Calculating perimeter of square\n    pm = 4 * side;\n    \n    // Display perimeter\n    cout &#x3C;&#x3C; \"The perimeter of the square is : \" &#x3C;&#x3C; pm &#x3C;&#x3C; endl;\n    \n    return 0;\n}\n</code></pre>\n<pre><code>import java.util.Scanner;\npublic class FindPerimeterOfASquare\n{\n\tpublic static void main(String[] args) {\n\t\tScanner sc=new Scanner(System.in);\n\t\tSystem.out.println(\"Enter the side of the square:\");\n\t\tdouble peri = sc.nextDouble();\n\t\tdouble  perimeter = 4*peri;\n\t\tSystem.out.println(\"Perimeter: \" + perimeter);\n\t}\n}\n\n// Contributed by Raghav Garg (@grraghav120)\n</code></pre>\n<pre><code>function perimeterOfSquare(sides) {\n    let perimeterOfSqr = 4 * sides;\n    console.log(perimeterOfSqr);\n}\n\nperimeterOfSquare(2);\n</code></pre>\n<pre><code># frozen_string_literal: true\n\ndef find_perimeter_of_a_square(side)\n  side * 4\nend\n\nif $PROGRAM_NAME == __FILE__\n  print 'Side : '\n  side = gets.chomp.to_i\n  puts \"Perimeter : #{find_perimeter_of_a_square(side)}\"\nend\n</code></pre>\n<pre><code>const getPerimeterOfSquare = (side:number): number =>{\nreturn 4* side;\n}\n\nconst side = 23;\nconsole.log(`The perimeter of the square of side ${side} is ${getPerimeterOfSquare(side)}`);\n</code></pre>\n<pre><code>def perimeter_of_square(side):\n    return 4 * side\n\n\nif __name__ == \"__main__\":\n    n = int(input(\"Enter side of square\"))\n    print(\"Perimeter of square:\", perimeter_of_square(n))\n</code></pre>\n<pre><code>def findPerimeterOfASquare (side : Int) : Int = {\n    side * 4\n}\n</code></pre>\n<pre><code>package main\n\nimport \"fmt\"\n\nfunc main() {\n\tvar side float32\n\tfmt.Printf(\"Side: \")\n\tfmt.Scan(&#x26;side)\n\tfmt.Println(\"Perimeter:\", 4 * side)\n}\n</code></pre>\n<pre><code>/*\n * Program: Find perimeter of a square\n * Author: Manan Karnik\n * Date: 13/10/2022\n */\n\nuse std::io::{self, Write};\n\nfn main() {\n    // String to store input\n    let mut input_text = String::new();\n    print!(\"Enter side of square: \");\n    io::stdout().flush().unwrap();\n\n    // Accept input\n    io::stdin()\n        .read_line(&#x26;mut input_text)\n        .expect(\"Failed to read line\");\n\n    // Parse input to f32\n    let side: f32 = input_text.trim().parse().expect(\"Input is not a number\");\n\n    // Print result\n    println!(\"The perimeter of a square with side length {} is {}\", side, side * 4.0);    \n}\n</code></pre>\n","markdown":"\n## Write a program to find perimeter of a square\n\nPerimeter of square = 4 × `Side`\r\n\r\n```\r\nSide : 2\r\n\r\nPerimeter : 8\r\n```\n\n---\n\n<CodeBlock slug=\"find-perimeter-of-a-square\" >\n\n```c\n#include <stdio.h>\n#include <setjmp.h> // For Exception Handling in C\n\njmp_buf savebuff;\n\n#define TRY if (setjmp(savebuff) == 0)\n#define CATCH else\n\n// Declaring a function with exception handling\nfloat calc_peri(float side);\n\n// Main function\nint main()\n{\n    float s;                                                  // Declaring Variable\n    printf(\"Enter the side of square to find perimeter: \\n\"); // Input prompt\n    scanf(\"%f\", &s);                                          // Reading input\n\n    TRY\n    {\n        printf(\"Perimeter of square is: %f\\n\", calc_peri(s));\n    }\n    CATCH\n    {\n        printf(\"ERROR!!! invalid input.\\n\");\n    }\n\n    return 0;\n}\n\nfloat calc_peri(float side)\n{\n    float peri;\n    peri = 4 * side;\n    if (side < 0)\n    {\n        longjmp(savebuff, 1);\n    }\n\n    return peri;\n}\n```\n\n```cpp\n// C++ Program to Find Perimeter of a Square\n#include <iostream>\nusing namespace std;\n\nint main(){\n    int side, pm;\n    \n    // Taking input\n    cout << \"Enter the side of the square   : \";\n    cin >> side;\n    \n    // Calculating perimeter of square\n    pm = 4 * side;\n    \n    // Display perimeter\n    cout << \"The perimeter of the square is : \" << pm << endl;\n    \n    return 0;\n}\n```\n\n```java\nimport java.util.Scanner;\npublic class FindPerimeterOfASquare\n{\n\tpublic static void main(String[] args) {\n\t\tScanner sc=new Scanner(System.in);\n\t\tSystem.out.println(\"Enter the side of the square:\");\n\t\tdouble peri = sc.nextDouble();\n\t\tdouble  perimeter = 4*peri;\n\t\tSystem.out.println(\"Perimeter: \" + perimeter);\n\t}\n}\n\n// Contributed by Raghav Garg (@grraghav120)\n```\n\n```js\nfunction perimeterOfSquare(sides) {\n    let perimeterOfSqr = 4 * sides;\n    console.log(perimeterOfSqr);\n}\n\nperimeterOfSquare(2);\n```\n\n```rb\n# frozen_string_literal: true\n\ndef find_perimeter_of_a_square(side)\n  side * 4\nend\n\nif $PROGRAM_NAME == __FILE__\n  print 'Side : '\n  side = gets.chomp.to_i\n  puts \"Perimeter : #{find_perimeter_of_a_square(side)}\"\nend\n```\n\n```ts\nconst getPerimeterOfSquare = (side:number): number =>{\nreturn 4* side;\n}\n\nconst side = 23;\nconsole.log(`The perimeter of the square of side ${side} is ${getPerimeterOfSquare(side)}`);\n```\n\n```py\ndef perimeter_of_square(side):\n    return 4 * side\n\n\nif __name__ == \"__main__\":\n    n = int(input(\"Enter side of square\"))\n    print(\"Perimeter of square:\", perimeter_of_square(n))\n```\n\n```scala\ndef findPerimeterOfASquare (side : Int) : Int = {\n    side * 4\n}\n```\n\n```go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\tvar side float32\n\tfmt.Printf(\"Side: \")\n\tfmt.Scan(&side)\n\tfmt.Println(\"Perimeter:\", 4 * side)\n}\n```\n\n```rs\n/*\n * Program: Find perimeter of a square\n * Author: Manan Karnik\n * Date: 13/10/2022\n */\n\nuse std::io::{self, Write};\n\nfn main() {\n    // String to store input\n    let mut input_text = String::new();\n    print!(\"Enter side of square: \");\n    io::stdout().flush().unwrap();\n\n    // Accept input\n    io::stdin()\n        .read_line(&mut input_text)\n        .expect(\"Failed to read line\");\n\n    // Parse input to f32\n    let side: f32 = input_text.trim().parse().expect(\"Input is not a number\");\n\n    // Print result\n    println!(\"The perimeter of a square with side length {} is {}\", side, side * 4.0);    \n}\n```\n\n</CodeBlock>\n\n","latestUpdateDate":"2022-12-02T06:03:31Z"}