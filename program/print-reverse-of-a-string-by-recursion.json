{"slug":"print-reverse-of-a-string-by-recursion","title":"Print reverse of a string by recursion","trackId":554,"tags":["C","C++","C#","JavaScript","TypeScript","Python","GO","PHP"],"contributors":["joao-vitor-souza","harshraj8843","vishal2376","ynbh","sksachin7z2"],"contentHtml":"<h2>Write a program to print reverse of a string by recursion</h2>\n<p>Reverse of a string is the string with characters in reverse order. For example, reverse of \"GeeksQuiz\" is \"ziuQskeeG\".</p>\n<pre><code>Input  : abcd\r\nOutput : dcba\n</code></pre>\n<hr>\n<pre><code>#include&#x3C;stdio.h>\n#include&#x3C;string.h>\nvoid reverse(char s[],int start,int end){\nif(start>=end)\nreturn ;\nchar tmp=s[end];\ns[end]=s[start];\ns[start]=tmp;\nstart++;\nend--;\nreverse(s,start,end);\n}\n int main(){\n    char s[]=\"im\";\n    int n=strlen(s);\n    reverse(s,0,n);\n    for(int i=0;i&#x3C;=n;i++)\n    printf(\"%c\",s[i]);\n   \n }\n</code></pre>\n<pre><code>#include&#x3C;iostream>\nusing namespace std;\nvoid reverse(string &#x26;s,int start,int end){\nif(start>=end)\nreturn ;\nswap(s[start],s[end]);\nstart++;\nend--;\nreverse(s,start,end);\n}\n int main(){\n    string s=\"\";\n    reverse(s,0,s.length()-1);\n    cout&#x3C;&#x3C;s;\n }\n</code></pre>\n<pre><code>using System;\n\npublic class ReverseStringRecursion\n{\n    public static string ReverseString(string str)\n        {\n            if ((str == null) || (str.Length &#x3C;= 1))\n                return str;\n            return ReverseString(str.Substring(1)) + str[0];\n        }\n    public static void Main(string[] args)\n    {\n        string myStr=\"Hello World\";\n            string reversed = ReverseString(myStr);\n \n            Console.WriteLine(\"Original String: \" + myStr);\n            Console.WriteLine(\"Reversed String: \" + reversed);\n            Console.ReadLine();\n    }\n}\n</code></pre>\n<pre><code>let s=\"sachin\";\n\nfunction reverse(s){\n    if (s === \"\")\n    return \"\";\n  else\n    return reverse(s.substr(1)) + s.charAt(0);\n}\nconsole.log(reverse(s));\n</code></pre>\n<pre><code>type ReversedString&#x3C;T> = T extends `${infer U}${infer R}` ? `${ReversedString&#x3C;R>}${U}` : T\n\nfunction printReverseOfAStringByRecursion(str: string): string {\n    if (!str.length) return \"\";\n  \n    return printReverseOfAStringByRecursion(str.substring(1)) + str[0];\n  }\n</code></pre>\n<pre><code>def reverse(s):\n    if len(s) == 0:\n        return s\n    else:\n        return reverse(s[1:]) + s[0]\n\n\ns = input(\"Enter the string to be reversed: \")\nprint(reverse(s))\n</code></pre>\n<pre><code>package main\nimport \"fmt\"\n\nfunc reverseText(text string, location int) string {\n\tif location >= 0 {\n\t\treturn string(text[location]) + reverseText(text, location - 1)\n\t}\n\treturn \"\"\n}\n\nfunc reverse(text string) string {\n\treturn reverseText(text, len(text) - 1)\n}\nfunc main() {\n\n\tvar text string = \"SACHIN\"\n\tfmt.Println(\"Original String: \",text,\"\\n\")\n\ttext = reverse(text)\n\tfmt.Println(\"Reversed String: \", text)\n}\n</code></pre>\n<pre><code>&#x3C;?php\nfunction Reverse($str){\n\n    $len = strlen($str);\n    if($len == 1){\n        return $str;\n    }\n    else{\n        $len--;\n        return Reverse(substr($str,1, $len)).substr($str, 0, 1);\n    }\n}\n$str = \"Sachin\";\nprint_r(Reverse($str));\n?>\n</code></pre>\n","markdown":"\n## Write a program to print reverse of a string by recursion\n\nReverse of a string is the string with characters in reverse order. For example, reverse of \"GeeksQuiz\" is \"ziuQskeeG\".\r\n\r\n```\r\nInput  : abcd\r\nOutput : dcba\r\n```\n\n---\n\n<CodeBlock slug=\"print-reverse-of-a-string-by-recursion\" >\n\n```c\n#include<stdio.h>\n#include<string.h>\nvoid reverse(char s[],int start,int end){\nif(start>=end)\nreturn ;\nchar tmp=s[end];\ns[end]=s[start];\ns[start]=tmp;\nstart++;\nend--;\nreverse(s,start,end);\n}\n int main(){\n    char s[]=\"im\";\n    int n=strlen(s);\n    reverse(s,0,n);\n    for(int i=0;i<=n;i++)\n    printf(\"%c\",s[i]);\n   \n }\n```\n\n```cpp\n#include<iostream>\nusing namespace std;\nvoid reverse(string &s,int start,int end){\nif(start>=end)\nreturn ;\nswap(s[start],s[end]);\nstart++;\nend--;\nreverse(s,start,end);\n}\n int main(){\n    string s=\"\";\n    reverse(s,0,s.length()-1);\n    cout<<s;\n }\n```\n\n```cs\nusing System;\n\npublic class ReverseStringRecursion\n{\n    public static string ReverseString(string str)\n        {\n            if ((str == null) || (str.Length <= 1))\n                return str;\n            return ReverseString(str.Substring(1)) + str[0];\n        }\n    public static void Main(string[] args)\n    {\n        string myStr=\"Hello World\";\n            string reversed = ReverseString(myStr);\n \n            Console.WriteLine(\"Original String: \" + myStr);\n            Console.WriteLine(\"Reversed String: \" + reversed);\n            Console.ReadLine();\n    }\n}\n```\n\n```js\nlet s=\"sachin\";\n\nfunction reverse(s){\n    if (s === \"\")\n    return \"\";\n  else\n    return reverse(s.substr(1)) + s.charAt(0);\n}\nconsole.log(reverse(s));\n```\n\n```ts\ntype ReversedString<T> = T extends `${infer U}${infer R}` ? `${ReversedString<R>}${U}` : T\n\nfunction printReverseOfAStringByRecursion(str: string): string {\n    if (!str.length) return \"\";\n  \n    return printReverseOfAStringByRecursion(str.substring(1)) + str[0];\n  }\n```\n\n```py\ndef reverse(s):\n    if len(s) == 0:\n        return s\n    else:\n        return reverse(s[1:]) + s[0]\n\n\ns = input(\"Enter the string to be reversed: \")\nprint(reverse(s))\n```\n\n```go\npackage main\nimport \"fmt\"\n\nfunc reverseText(text string, location int) string {\n\tif location >= 0 {\n\t\treturn string(text[location]) + reverseText(text, location - 1)\n\t}\n\treturn \"\"\n}\n\nfunc reverse(text string) string {\n\treturn reverseText(text, len(text) - 1)\n}\nfunc main() {\n\n\tvar text string = \"SACHIN\"\n\tfmt.Println(\"Original String: \",text,\"\\n\")\n\ttext = reverse(text)\n\tfmt.Println(\"Reversed String: \", text)\n}\n```\n\n```php\n<?php\nfunction Reverse($str){\n\n    $len = strlen($str);\n    if($len == 1){\n        return $str;\n    }\n    else{\n        $len--;\n        return Reverse(substr($str,1, $len)).substr($str, 0, 1);\n    }\n}\n$str = \"Sachin\";\nprint_r(Reverse($str));\n?>\n```\n\n</CodeBlock>\n\n","latestUpdateDate":"2022-12-02T06:03:31Z"}