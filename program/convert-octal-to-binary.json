{"slug":"convert-octal-to-binary","title":"Convert octal to binary","trackId":4499,"tags":["C","C++","JavaScript","Kotlin","Python","GO","PHP"],"contributors":["rksp25","joao-vitor-souza","harshraj8843","saikumarjetti","codingkush"],"contentHtml":"<h2>Write a program to convert octal to binary</h2>\n<p>Octal is a base-8 number system. It uses only eight digits: 0, 1, 2, 3, 4, 5, 6, and 7. The digits are called octits. An octit is the smallest unit of information in a computer. An octit can be used to represent a single value, such as 0, 1, 2, 3, 4, 5, 6, or 7, or it can be used to represent a single state, such as on or off.</p>\n<p>Binary is a base-2 number system. It uses only two digits: 0 and 1. The digits are called bits. A bit is the smallest unit of information in a computer. A bit can be either 0 or 1. A bit can be used to represent a single value, such as 0 or 1, or it can be used to represent a single state, such as on or off.</p>\n<p>To convert an octal number to binary, we can use the following algorithm:</p>\n<ol>\n<li>Convert the octal number to decimal.</li>\n<li>Convert the decimal number to binary.</li>\n</ol>\n<pre><code>Input  : 12\r\nOutput : 1010\n</code></pre>\n<hr>\n<pre><code>#include &#x3C;stdio.h>\n#include &#x3C;math.h>\n\nint main()\n{\n    int i, octal, decimal = 0;\n    long binary = 0;\n    i = 0;\n    \n    printf(\"Enter the Octal Number = \");\n    scanf(\"%d\",&#x26;octal);\n\n    while(octal != 0)\n    {\n        decimal = decimal + (octal % 10) * pow(8, i);\n        i++;\n        octal = octal / 10;\n    }\n    i = 1;\n    while(decimal != 0)\n    {\n        binary += ((decimal % 2) * i);\n        decimal = decimal / 2;\n        i = i * 10;\n    }\n\n    printf(\"The Binay Value = %ld\\n\", binary); \n}\n</code></pre>\n<pre><code>#include&#x3C;iostream>\n\nusing namespace std;\n\nint main()\n\n{\n\n    int num,p=1;\n\n    int decmal=0,i=1,j,d;\n\n    int  binary=0;\n\n    cout&#x3C;&#x3C;\"Enter a number in octal (using digit 0 - 7) :\";\n\n\tcin>>num;\tj=num;\n\n\tdo\n\n\t{\n\n          d = j % 10;\n\n            if(i==1)\n\n                  p=p*1;\n\n            else\n\n                 p=p*8;\n\n      decmal=decmal+(d*p);\n\n\t   i++;\n\n\t   j=j/10;\n\n\t   }\n\n\t   while(j>0);\n\n\t   i=1;\n\n\t   j=decmal;\n\n\t   do\n\n\t   {\n\n\t   \t binary=binary+(decmal % 2)*i;\n\n        i=i*10;\n\n        decmal=decmal/2;\n\n        j=j/2;\n\n\t   }\n\n\t   while(j>0);\n\n\t   cout&#x3C;&#x3C;\"Octal number into Binary number   \"&#x3C;&#x3C;binary;\n\n}\n</code></pre>\n<pre><code>function octalToBinary(octnum)\n{\n    let i = 0;\n    let binary = \"\";\n\n    while (i&#x3C;octnum.length) {\n\n        let c=octnum[i];\n        switch (c) {\n        case '0':\n            binary += \"000\";\n            break;\n        case '1':\n            binary += \"1\";\n            break;\n        case '2':\n            binary += \"010\";\n            break;\n        case '3':\n            binary += \"011\";\n            break;\n        case '4':\n            binary += \"100\";\n            break;\n        case '5':\n            binary += \"101\";\n            break;\n        case '6':\n            binary += \"110\";\n            break;\n        case '7':\n            binary += \"111\";\n            break;\n        default:\n            document.write( \"&#x3C;br>Invalid Octal Digit \"+ octnum[i]);\n            break;\n        }\n        i++;\n    }\n\n    return binary;\n}\n\n\nconsole.log(octalToBinary('12'));\n</code></pre>\n<pre><code>import kotlin.math.pow\n\nfun main() {\n    print(\"Enter Octal No. to Convert in Binary: \")\n    val num = readln().toInt()\n    println()\n    print(\"Hexadecimal of Octal No: $num is: \")\n    print(octalToBinary(num))\n}\n\nprivate fun checkOctalNumber(octalNum: String): Boolean {\n    var isOctal = true\n\n    for(charAtPos in octalNum) {\n        if(!((charAtPos >= '0') &#x26;&#x26; (charAtPos &#x3C;= '7'))) {\n            isOctal = false\n            break\n        }\n    }\n    return isOctal\n}\n\nprivate fun octalToBinary(nums: Int): String {\n    val octalN = nums.toString()\n    var binaryNum = \"\"\n\n    if(checkOctalNumber(octalN)) {\n        val octalNumString: String = octalN\n        var i = 0\n        while(i &#x3C; octalNumString.length) {\n            when(octalNumString[i]) {\n                '0'  -> binaryNum += \"000\"\n                '1'  -> binaryNum += \"1\"\n                '2'  -> binaryNum += \"010\"\n                '3'  -> binaryNum += \"011\"\n                '4'  -> binaryNum += \"100\"\n                '5'  -> binaryNum += \"101\"\n                '6'  -> binaryNum += \"110\"\n                '7'  -> binaryNum += \"111\"\n            }\n            i++\n        }\n    } else {\n        println(\"$octalN is not an octal number\")\n    }\n\n    return binaryNum\n}\n</code></pre>\n<pre><code>import kotlin.math.pow\n\nfun main() {\n    print(\"Enter Octal No. to Convert in Binary: \")\n    val num = readln().toInt()\n    println()\n    print(\"Hexadecimal of Octal No: $num is: \")\n    print(octalToBinary(num))\n}\n\nprivate fun checkOctalNumber(octalNum: String): Boolean {\n    var isOctal = true\n\n    for(charAtPos in octalNum) {\n        if(!((charAtPos >= '0') &#x26;&#x26; (charAtPos &#x3C;= '7'))) {\n            isOctal = false\n            break\n        }\n    }\n    return isOctal\n}\n\nprivate fun octalToBinary(nums: Int): String {\n    val octalN = nums.toString()\n    var binaryNum = \"\"\n\n    if(checkOctalNumber(octalN)) {\n        val octalNumString: String = octalN\n        var i = 0\n        while(i &#x3C; octalNumString.length) {\n            when(octalNumString[i]) {\n                '0'  -> binaryNum += \"000\"\n                '1'  -> binaryNum += \"1\"\n                '2'  -> binaryNum += \"010\"\n                '3'  -> binaryNum += \"011\"\n                '4'  -> binaryNum += \"100\"\n                '5'  -> binaryNum += \"101\"\n                '6'  -> binaryNum += \"110\"\n                '7'  -> binaryNum += \"111\"\n            }\n            i++\n        }\n    } else {\n        println(\"$octalN is not an octal number\")\n    }\n\n    return binaryNum\n}\n</code></pre>\n<pre><code>print(bin(int(input(), 8))[2:])\n</code></pre>\n<pre><code>package main\n\nimport (\n\t\"fmt\"\n)\n\nfunc main() {\n\tvar value string = \"\"\n\tvar binary string = \"\"\n\n\tfmt.Print(\"Type a number: \")\n\tfmt.Scan(&#x26;value)\n\n\tvar length int = len(value)\n\n\tfor i := 0; i &#x3C; length; i++ {\n\n\t\tswitch value[i] {\n\t\tcase '0':\n\t\t\tbinary += \"000\"\n\t\tcase '1':\n\t\t\tbinary += \"001\"\n\t\tcase '2':\n\t\t\tbinary += \"010\"\n\t\tcase '3':\n\t\t\tbinary += \"011\"\n\t\tcase '4':\n\t\t\tbinary += \"100\"\n\t\tcase '5':\n\t\t\tbinary += \"101\"\n\t\tcase '6':\n\t\t\tbinary += \"110\"\n\t\tcase '7':\n\t\t\tbinary += \"111\"\n\t\t}\n\n\t}\n\n\tfmt.Println(\"Binary is:\", binary)\n\n}\n</code></pre>\n<pre><code>&#x3C;?php\n\n$octal = readline();\n$possibleChars = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"];\n\n$decimal = 0;\n\nforeach (str_split($octal) as $key => $value) {\n    if (!in_array($value, $possibleChars)) {\n        exit(\"Input contains an invalid value: \" . $value . \"\\n\");\n    } else {\n        $decimal += $value * pow(8, (int) (strlen($octal) - $key - 1));\n    }\n}\n\n$binary = \"\";\n\nwhile (true) {\n    $quocient = floor($decimal / 2);\n    if ($quocient &#x3C; 1) {\n        $binary .= $decimal;\n        break;\n    }\n    $remainder = $decimal % 2;\n    $decimal = $quocient;\n    $binary .= $remainder;\n}\n\necho strrev($binary) . \"\\n\";\n\n?>\n</code></pre>\n","markdown":"\n## Write a program to convert octal to binary\n\nOctal is a base-8 number system. It uses only eight digits: 0, 1, 2, 3, 4, 5, 6, and 7. The digits are called octits. An octit is the smallest unit of information in a computer. An octit can be used to represent a single value, such as 0, 1, 2, 3, 4, 5, 6, or 7, or it can be used to represent a single state, such as on or off.\r\n\r\nBinary is a base-2 number system. It uses only two digits: 0 and 1. The digits are called bits. A bit is the smallest unit of information in a computer. A bit can be either 0 or 1. A bit can be used to represent a single value, such as 0 or 1, or it can be used to represent a single state, such as on or off.\r\n\r\nTo convert an octal number to binary, we can use the following algorithm:\r\n\r\n1. Convert the octal number to decimal.\r\n2. Convert the decimal number to binary.\r\n\r\n```\r\nInput  : 12\r\nOutput : 1010\r\n```\n\n---\n\n<CodeBlock slug=\"convert-octal-to-binary\" >\n\n```c\n#include <stdio.h>\n#include <math.h>\n\nint main()\n{\n    int i, octal, decimal = 0;\n    long binary = 0;\n    i = 0;\n    \n    printf(\"Enter the Octal Number = \");\n    scanf(\"%d\",&octal);\n\n    while(octal != 0)\n    {\n        decimal = decimal + (octal % 10) * pow(8, i);\n        i++;\n        octal = octal / 10;\n    }\n    i = 1;\n    while(decimal != 0)\n    {\n        binary += ((decimal % 2) * i);\n        decimal = decimal / 2;\n        i = i * 10;\n    }\n\n    printf(\"The Binay Value = %ld\\n\", binary); \n}\n```\n\n```cpp\n#include<iostream>\n\nusing namespace std;\n\nint main()\n\n{\n\n    int num,p=1;\n\n    int decmal=0,i=1,j,d;\n\n    int  binary=0;\n\n    cout<<\"Enter a number in octal (using digit 0 - 7) :\";\n\n\tcin>>num;\tj=num;\n\n\tdo\n\n\t{\n\n          d = j % 10;\n\n            if(i==1)\n\n                  p=p*1;\n\n            else\n\n                 p=p*8;\n\n      decmal=decmal+(d*p);\n\n\t   i++;\n\n\t   j=j/10;\n\n\t   }\n\n\t   while(j>0);\n\n\t   i=1;\n\n\t   j=decmal;\n\n\t   do\n\n\t   {\n\n\t   \t binary=binary+(decmal % 2)*i;\n\n        i=i*10;\n\n        decmal=decmal/2;\n\n        j=j/2;\n\n\t   }\n\n\t   while(j>0);\n\n\t   cout<<\"Octal number into Binary number   \"<<binary;\n\n}\n```\n\n```js\nfunction octalToBinary(octnum)\n{\n    let i = 0;\n    let binary = \"\";\n\n    while (i<octnum.length) {\n\n        let c=octnum[i];\n        switch (c) {\n        case '0':\n            binary += \"000\";\n            break;\n        case '1':\n            binary += \"1\";\n            break;\n        case '2':\n            binary += \"010\";\n            break;\n        case '3':\n            binary += \"011\";\n            break;\n        case '4':\n            binary += \"100\";\n            break;\n        case '5':\n            binary += \"101\";\n            break;\n        case '6':\n            binary += \"110\";\n            break;\n        case '7':\n            binary += \"111\";\n            break;\n        default:\n            document.write( \"<br>Invalid Octal Digit \"+ octnum[i]);\n            break;\n        }\n        i++;\n    }\n\n    return binary;\n}\n\n\nconsole.log(octalToBinary('12'));\n```\n\n```kt\nimport kotlin.math.pow\n\nfun main() {\n    print(\"Enter Octal No. to Convert in Binary: \")\n    val num = readln().toInt()\n    println()\n    print(\"Hexadecimal of Octal No: $num is: \")\n    print(octalToBinary(num))\n}\n\nprivate fun checkOctalNumber(octalNum: String): Boolean {\n    var isOctal = true\n\n    for(charAtPos in octalNum) {\n        if(!((charAtPos >= '0') && (charAtPos <= '7'))) {\n            isOctal = false\n            break\n        }\n    }\n    return isOctal\n}\n\nprivate fun octalToBinary(nums: Int): String {\n    val octalN = nums.toString()\n    var binaryNum = \"\"\n\n    if(checkOctalNumber(octalN)) {\n        val octalNumString: String = octalN\n        var i = 0\n        while(i < octalNumString.length) {\n            when(octalNumString[i]) {\n                '0'  -> binaryNum += \"000\"\n                '1'  -> binaryNum += \"1\"\n                '2'  -> binaryNum += \"010\"\n                '3'  -> binaryNum += \"011\"\n                '4'  -> binaryNum += \"100\"\n                '5'  -> binaryNum += \"101\"\n                '6'  -> binaryNum += \"110\"\n                '7'  -> binaryNum += \"111\"\n            }\n            i++\n        }\n    } else {\n        println(\"$octalN is not an octal number\")\n    }\n\n    return binaryNum\n}\n```\n\n```kts\nimport kotlin.math.pow\n\nfun main() {\n    print(\"Enter Octal No. to Convert in Binary: \")\n    val num = readln().toInt()\n    println()\n    print(\"Hexadecimal of Octal No: $num is: \")\n    print(octalToBinary(num))\n}\n\nprivate fun checkOctalNumber(octalNum: String): Boolean {\n    var isOctal = true\n\n    for(charAtPos in octalNum) {\n        if(!((charAtPos >= '0') && (charAtPos <= '7'))) {\n            isOctal = false\n            break\n        }\n    }\n    return isOctal\n}\n\nprivate fun octalToBinary(nums: Int): String {\n    val octalN = nums.toString()\n    var binaryNum = \"\"\n\n    if(checkOctalNumber(octalN)) {\n        val octalNumString: String = octalN\n        var i = 0\n        while(i < octalNumString.length) {\n            when(octalNumString[i]) {\n                '0'  -> binaryNum += \"000\"\n                '1'  -> binaryNum += \"1\"\n                '2'  -> binaryNum += \"010\"\n                '3'  -> binaryNum += \"011\"\n                '4'  -> binaryNum += \"100\"\n                '5'  -> binaryNum += \"101\"\n                '6'  -> binaryNum += \"110\"\n                '7'  -> binaryNum += \"111\"\n            }\n            i++\n        }\n    } else {\n        println(\"$octalN is not an octal number\")\n    }\n\n    return binaryNum\n}\n```\n\n```py\nprint(bin(int(input(), 8))[2:])\n```\n\n```go\npackage main\n\nimport (\n\t\"fmt\"\n)\n\nfunc main() {\n\tvar value string = \"\"\n\tvar binary string = \"\"\n\n\tfmt.Print(\"Type a number: \")\n\tfmt.Scan(&value)\n\n\tvar length int = len(value)\n\n\tfor i := 0; i < length; i++ {\n\n\t\tswitch value[i] {\n\t\tcase '0':\n\t\t\tbinary += \"000\"\n\t\tcase '1':\n\t\t\tbinary += \"001\"\n\t\tcase '2':\n\t\t\tbinary += \"010\"\n\t\tcase '3':\n\t\t\tbinary += \"011\"\n\t\tcase '4':\n\t\t\tbinary += \"100\"\n\t\tcase '5':\n\t\t\tbinary += \"101\"\n\t\tcase '6':\n\t\t\tbinary += \"110\"\n\t\tcase '7':\n\t\t\tbinary += \"111\"\n\t\t}\n\n\t}\n\n\tfmt.Println(\"Binary is:\", binary)\n\n}\n```\n\n```php\n<?php\n\n$octal = readline();\n$possibleChars = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"];\n\n$decimal = 0;\n\nforeach (str_split($octal) as $key => $value) {\n    if (!in_array($value, $possibleChars)) {\n        exit(\"Input contains an invalid value: \" . $value . \"\\n\");\n    } else {\n        $decimal += $value * pow(8, (int) (strlen($octal) - $key - 1));\n    }\n}\n\n$binary = \"\";\n\nwhile (true) {\n    $quocient = floor($decimal / 2);\n    if ($quocient < 1) {\n        $binary .= $decimal;\n        break;\n    }\n    $remainder = $decimal % 2;\n    $decimal = $quocient;\n    $binary .= $remainder;\n}\n\necho strrev($binary) . \"\\n\";\n\n?>\n```\n\n</CodeBlock>\n\n","latestUpdateDate":"2022-12-27T21:40:59Z"}