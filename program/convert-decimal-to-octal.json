{"slug":"convert-decimal-to-octal","title":"Convert decimal to octal","trackId":976,"tags":["C","C++","Java","JavaScript","TypeScript","Python","GO"],"contributors":["joao-vitor-souza","harshraj8843","neelesh08","Ipankaj07","MadhuS-1605","Greeshma-frontier","grraghav120","heySanj"],"contentHtml":"<h2>Write a program to convert decimal to octal</h2>\n<p>Octal is a base-8 number system. It uses only eight digits: 0, 1, 2, 3, 4, 5, 6, and 7. The digits are called octits. An octit is the smallest unit of information in a computer. An octit can be used to represent a single value, such as 0, 1, 2, 3, 4, 5, 6, or 7, or it can be used to represent a single state, such as on or off.</p>\n<p>To convert a decimal number to octal, we can use the following algorithm:</p>\n<ol>\n<li>Divide the decimal number by 8.</li>\n<li>Write down the remainder.</li>\n<li>Divide the quotient by 8.</li>\n<li>Write down the remainder.</li>\n<li>Repeat steps 3 and 4 until the quotient is 0.</li>\n<li>The octal number is the sequence of remainders written in reverse order.</li>\n</ol>\n<pre><code>Input  : 10\r\nOutput : 12\n</code></pre>\n<hr>\n<pre><code>#include&#x3C;stdio.h>\n#include&#x3C;stdlib.h>\n\n\nint main()\n{\n    long deciNum , octNum = 0, quotient;\n    int octalarray[100];\n    int i= 0, j;\n    \n    printf(\"Enter the number\");\n    scanf(\"%ld\",&#x26;deciNum);\n\n    quotient = deciNum;\n    while(quotient)\n    {\n        octalarray[i++] = quotient%8;\n        quotient = quotient/8;\n    }\n\n    for(j = i-1 ; j >= 0 ; j--)\n    {\n        octNum = octNum*10 + octalarray[j];\n    }\n\n    printf(\"%ld\" , octNum);\n    return 0;\n}\n</code></pre>\n<pre><code>#include &#x3C;iostream>\n#include &#x3C;string>\n#include &#x3C;algorithm>\nusing namespace std;\n\nstring decimaltooctal(int n){\n    string ans=\"\";\n    for(int i=n;i>0;i=i/8){\n        int mod=i%8;\n        ans+=to_string(mod);\n    }\n    sort(ans.begin(),ans.end());\n    return ans;\n}\n\n\nint main(){\n    int n;\n    cout&#x3C;&#x3C;\"Enter a number\"&#x3C;&#x3C;'\\n';\n    cin>>n;\n    cout&#x3C;&#x3C;decimaltooctal(n)&#x3C;&#x3C;'\\n';\n}\n</code></pre>\n<pre><code>import java.util.Scanner;\n\nclass ConvertDecimalToOctal {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.print(\"Enter a decimal number: \");\n        int decimal = scanner.nextInt();\n        String octal = \"\";\n        while (decimal != 0) {\n            int remainder = decimal % 8;\n            octal = remainder + octal;\n            decimal = decimal / 8;\n        }\n        System.out.println(\"Octal number is: \" + octal);\n    }\n}\n</code></pre>\n<pre><code>function decimalToOctal(num) {\n    return num.toString(8);\n}\n\nconsole.log(\"Decimal to Octal conversion\", decimalToOctal(20))\n</code></pre>\n<pre><code>function decimalToOctal(num: number) {\n    return num.toString(8);\n}\n\nconsole.log(\"Decimal to Octal conversion\", decimalToOctal(10))\n</code></pre>\n<pre><code>def decimal_to_octal(n):\r\n\r\n    # Store the remainders in this array\r\n    octal = []\r\n\r\n    # Repeatedly divide until quotient is 0\r\n    while n != 0:\r\n\r\n        # Store the remainder in the octal array\r\n        octal.append(n % 8)\r\n\r\n        # n becomes the quotient\r\n        n = int(n / 8)\r\n\r\n    # Print out the sequence of remainders in reverse order\r\n    result = \"\".join(str(x) for x in octal[::-1])\r\n    print(result)\r\n\r\n\r\n# Run the convertor on any input number\r\ntry:\r\n    decimal_to_octal(int(input(\"Decimal to convert: \")))\r\nexcept:\r\n    print(\"Please enter a valid decimal number.\")\n</code></pre>\n<pre><code>package main\n\nimport (\n\t\"fmt\"\n\t\"strconv\"\n)\n\nfunc main() {\n\n\tvar num int64\n  fmt.Println(\"Enter Decimal Value:\")\n  fmt.Scan(&#x26;num)\n\toct_num := strconv.FormatInt(num, 8)\n\tfmt.Println(\"Octal num: \", oct_num)\n\n}\n</code></pre>\n","markdown":"\n## Write a program to convert decimal to octal\n\nOctal is a base-8 number system. It uses only eight digits: 0, 1, 2, 3, 4, 5, 6, and 7. The digits are called octits. An octit is the smallest unit of information in a computer. An octit can be used to represent a single value, such as 0, 1, 2, 3, 4, 5, 6, or 7, or it can be used to represent a single state, such as on or off.\r\n\r\nTo convert a decimal number to octal, we can use the following algorithm:\r\n\r\n1. Divide the decimal number by 8.\r\n2. Write down the remainder.\r\n3. Divide the quotient by 8.\r\n4. Write down the remainder.\r\n5. Repeat steps 3 and 4 until the quotient is 0.\r\n6. The octal number is the sequence of remainders written in reverse order.\r\n\r\n```\r\nInput  : 10\r\nOutput : 12\r\n```\n\n---\n\n<CodeBlock slug=\"convert-decimal-to-octal\" >\n\n```c\n#include<stdio.h>\n#include<stdlib.h>\n\n\nint main()\n{\n    long deciNum , octNum = 0, quotient;\n    int octalarray[100];\n    int i= 0, j;\n    \n    printf(\"Enter the number\");\n    scanf(\"%ld\",&deciNum);\n\n    quotient = deciNum;\n    while(quotient)\n    {\n        octalarray[i++] = quotient%8;\n        quotient = quotient/8;\n    }\n\n    for(j = i-1 ; j >= 0 ; j--)\n    {\n        octNum = octNum*10 + octalarray[j];\n    }\n\n    printf(\"%ld\" , octNum);\n    return 0;\n}\n```\n\n```cpp\n#include <iostream>\n#include <string>\n#include <algorithm>\nusing namespace std;\n\nstring decimaltooctal(int n){\n    string ans=\"\";\n    for(int i=n;i>0;i=i/8){\n        int mod=i%8;\n        ans+=to_string(mod);\n    }\n    sort(ans.begin(),ans.end());\n    return ans;\n}\n\n\nint main(){\n    int n;\n    cout<<\"Enter a number\"<<'\\n';\n    cin>>n;\n    cout<<decimaltooctal(n)<<'\\n';\n}\n```\n\n```java\nimport java.util.Scanner;\n\nclass ConvertDecimalToOctal {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        System.out.print(\"Enter a decimal number: \");\n        int decimal = scanner.nextInt();\n        String octal = \"\";\n        while (decimal != 0) {\n            int remainder = decimal % 8;\n            octal = remainder + octal;\n            decimal = decimal / 8;\n        }\n        System.out.println(\"Octal number is: \" + octal);\n    }\n}\n```\n\n```js\nfunction decimalToOctal(num) {\n    return num.toString(8);\n}\n\nconsole.log(\"Decimal to Octal conversion\", decimalToOctal(20))\n```\n\n```ts\nfunction decimalToOctal(num: number) {\n    return num.toString(8);\n}\n\nconsole.log(\"Decimal to Octal conversion\", decimalToOctal(10))\n```\n\n```py\ndef decimal_to_octal(n):\r\n\r\n    # Store the remainders in this array\r\n    octal = []\r\n\r\n    # Repeatedly divide until quotient is 0\r\n    while n != 0:\r\n\r\n        # Store the remainder in the octal array\r\n        octal.append(n % 8)\r\n\r\n        # n becomes the quotient\r\n        n = int(n / 8)\r\n\r\n    # Print out the sequence of remainders in reverse order\r\n    result = \"\".join(str(x) for x in octal[::-1])\r\n    print(result)\r\n\r\n\r\n# Run the convertor on any input number\r\ntry:\r\n    decimal_to_octal(int(input(\"Decimal to convert: \")))\r\nexcept:\r\n    print(\"Please enter a valid decimal number.\")\n```\n\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"strconv\"\n)\n\nfunc main() {\n\n\tvar num int64\n  fmt.Println(\"Enter Decimal Value:\")\n  fmt.Scan(&num)\n\toct_num := strconv.FormatInt(num, 8)\n\tfmt.Println(\"Octal num: \", oct_num)\n\n}\n```\n\n</CodeBlock>\n\n","latestUpdateDate":"2022-12-02T06:03:31Z"}