{"slug":"convert-octal-to-hexadecimal","title":"Convert octal to hexadecimal","trackId":456,"tags":["Java","JavaScript","Kotlin","TypeScript","Python","PHP"],"contributors":["joao-vitor-souza","UsmanFani","sahooankeeta","DiamonndAde","rakibul-islam-raju","ridsuteri","harshraj8843"],"contentHtml":"<h2>Write a program to convert octal to hexadecimal</h2>\n<p>Octal is a base-8 number system. It uses only eight digits: 0, 1, 2, 3, 4, 5, 6, and 7. The digits are called octits. An octit is the smallest unit of information in a computer. An octit can be used to represent a single value, such as 0, 1, 2, 3, 4, 5, 6, or 7, or it can be used to represent a single state, such as on or off.</p>\n<p>Hexadecimal is a base-16 number system. It uses sixteen digits: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, and F. The digits are called hexits. A hexit is the smallest unit of information in a computer. A hexit can be used to represent a single value, such as 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, or F, or it can be used to represent a single state, such as on or off.</p>\n<p>To convert an octal number to hexadecimal, we can use the following algorithm:</p>\n<ol>\n<li>Convert the octal number to decimal.</li>\n<li>Convert the decimal number to hexadecimal.</li>\n</ol>\n<pre><code>Input  : 12\r\nOutput : A\n</code></pre>\n<hr>\n<pre><code>import java .util.*;\nclass ConvertOctalToHexadecimal\n{\n  public static int octToDec(int n)\n    {\n        int result = 0,temp=0;double p=0.0;\n        for (int i = 0; n > 0; i++) {\n            temp = n % 10;\n            p = Math.pow(8, i);\n            result += (temp * p);\n            n = n / 10;\n        }\n        return result;\n    }\n    public static String decTohex(int n)\n    {\n        int[] hexNum = new int[100];\n        int i = 0;\n        String result=\"\";\n        while (n != 0) {\n            hexNum[i] = n % 16;\n            n = n / 16;\n            i++;\n        }\n        for (int j = i - 1; j >= 0; j--) {\n            if (hexNum[j] > 9)\n                result+=(char)(55 + hexNum[j]);\n            else\n                result+=hexNum[j];\n        }\n        return result;\n    }\n    public static void main(String args[]) \n   {\n      Scanner sc=new Scanner(System.in);\n      System.out.println(\"Enter octal number \");\n      int n=sc.nextInt();\n      System.out.println(decTohex(octToDec(n)));\n       \n   }\n}\n</code></pre>\n<pre><code>// JavaScript program to convert Octal\n// to Hexadecimal\n\n// Function to convert octal to decimal\nfunction octalToDecimal(n) {\n  var num = n;\n  var dec_value = 0;\n\n  var base = 1;\n\n  var temp = num;\n  while (temp > 0) {\n    // Extracting last digit\n    var last_digit = temp % 10;\n    temp = Math.floor(temp / 10);\n\n    // Multiplying last digit with\n    // appropriate base value and\n    // adding it to dec_value\n    dec_value += last_digit * base;\n\n    base = base * 8;\n  }\n  return dec_value;\n}\n\n// Function to convert decimal\n// to hexadecimal\nfunction decToHexa(n) {\n  // char array to store\n  // hexadecimal number\n  var hexaDeciNum = new Array(100);\n\n  // counter for hexadecimal\n  // number array\n  var i = 0;\n  while (n != 0) {\n    // Temporary variable to\n    // store remainder\n    var temp = 0;\n\n    // Storing remainder in\n    // temp variable.\n    temp = n % 16;\n\n    // Check if temp &#x3C; 10\n    if (temp &#x3C; 10) {\n      hexaDeciNum[i] = temp + 48;\n      i++;\n    } else {\n      hexaDeciNum[i] = temp + 87;\n      i++;\n    }\n    n = Math.floor(n / 16);\n  }\n\n  var ans = \"\";\n\n  // Printing hexadecimal number array\n  // in reverse order\n  for (var j = i - 1; j >= 0; j--) {\n    ans += String.fromCharCode(hexaDeciNum[j]);\n  }\n  return ans;\n}\n\n// Driver Code\nvar hexnum;\nvar decnum, octnum;\n\n// Taking 5123 as an example of\n// Octal Number.\noctnum = 5123;\n\n// Convert Octal to Decimal\ndecnum = octalToDecimal(octnum);\n\n// Convert Decimal to Hexadecimal\nhexnum = decToHexa(decnum);\n\nconsole.log(\"Equivalent Hexadecimal Value = \" + hexnum);\n</code></pre>\n<pre><code>import kotlin.math.pow\n\nfun main() {\n    print(\"Enter Octal No. to Convert in Hexadecimal: \")\n    val num = readln().toInt()\n    println()\n    print(\"Hexadecimal of Octal No: $num is: \")\n    print(octalToHexadecimal(num))\n}\n\nprivate fun octalToHexadecimal(nums: Int): String {\n    val decimal = octalToDecimal(nums)\n    return decimalToHexadecimal(decimal)\n}\n\nprivate fun octalToDecimal(nums: Int): Int {\n    var decimal = 0\n    var digit = nums\n    var n = 0\n    while (digit > 0) {\n        val rem = digit % 10\n        decimal += rem * 8.0.pow(n).toInt()\n        digit /= 10\n        n++\n    }\n    return decimal\n}\n\nprivate fun decimalToHexadecimal(nums: Int): String {\n    var hexa = \"\"\n    var digit = nums\n    var n = 0\n    while (digit > 0) {\n        val rem = digit % 16\n        hexa = when (rem) {\n            10 -> \"A\"\n            11 -> \"B\"\n            12 -> \"C\"\n            13 -> \"D\"\n            14 -> \"E\"\n            15 -> \"F\"\n            else -> {\n                rem.toString()\n            }\n        } + hexa\n        digit /= 16\n    }\n    return hexa\n}\n</code></pre>\n<pre><code>function octalToDecimal(n:any){\n    var num = n;\n    var dec_value = 0;\n    var base = 1;\n   \n    var temp = num;\n    while (temp > 0){\n        var last_digit = temp % 10;\n        temp = Math.floor(temp / 10);\n        dec_value += last_digit * base;\n   \n        base = base * 8;\n    }\n    return dec_value;\n}\n\nfunction decToHexa(n:any){\n    var hexaDeciNum = new Array(100);\n    var i = 0;\n    while(n != 0){   \n        var temp  = 0;\n        temp = n % 16;\n        \n        if (temp &#x3C; 10){\n            hexaDeciNum[i] = temp + 48;\n            i++;\n        }\n        else{\n            hexaDeciNum[i] = temp + 87;\n            i++;\n        }\n        n = Math.floor(n / 16);\n    }\n    var ans = \"\";\n    for(var j = i - 1; j >= 0; j--){\n        ans += String.fromCharCode(hexaDeciNum[j]);\n    }\n    return ans;\n}\n\nvar hexnum;\nvar decnum, octnum;\n\noctnum = 12;\n     \n// Convert Octal to Decimal\ndecnum = octalToDecimal(octnum);\n     \n// Convert Decimal to Hexadecimal\nhexnum = decToHexa(decnum);\n \nconsole.log(\"Equivalent Hexadecimal Value :\" + hexnum);\n</code></pre>\n<pre><code>octnum = input()\n\n# Convert octal to decimal\ndecnum = int(octnum, 8)\n\n# Convert decimal to hexadecimal\nhexadecimal = hex(decnum).replace(\"0x\", \"\")\n\n# Printing the hexadecimal value\nprint(hexadecimal)\n</code></pre>\n<pre><code>&#x3C;?php\n\n$octal = readline();\n$possibleChars = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"];\n$hexaCharsMapping = [\"10\" => \"A\", \"11\" => \"B\", \"12\" => \"C\", \"13\" => \"D\", \"14\" => \"E\", \"15\" => \"F\"];\n\n$decimal = 0;\n\nforeach (str_split($octal) as $key => $value) {\n    if (!in_array($value, $possibleChars)) {\n        exit(\"Input contains an invalid value: \" . $value . \"\\n\");\n    } else {\n        $decimal += $value * pow(8, (int) (strlen($octal) - $key - 1));\n    }\n}\n\n$hexadecimal = \"\";\n\nfunction map($num)\n{\n    global $hexaCharsMapping;\n    if (in_array($num, [10, 11, 12, 13, 14, 15])) {\n        return $hexaCharsMapping[$num];\n    } else {\n        return $num;\n    }\n}\n\nwhile (true) {\n    $quocient = floor($decimal / 16);\n    if ($quocient &#x3C; 1) {\n        $hexadecimal .= map($decimal);\n        break;\n    }\n    $remainder = $decimal % 16;\n    $decimal = $quocient;\n    $hexadecimal .= map($remainder);\n}\n\necho strrev($hexadecimal) . \"\\n\";\n\n?>\n</code></pre>\n","markdown":"\n## Write a program to convert octal to hexadecimal\n\nOctal is a base-8 number system. It uses only eight digits: 0, 1, 2, 3, 4, 5, 6, and 7. The digits are called octits. An octit is the smallest unit of information in a computer. An octit can be used to represent a single value, such as 0, 1, 2, 3, 4, 5, 6, or 7, or it can be used to represent a single state, such as on or off.\r\n\r\nHexadecimal is a base-16 number system. It uses sixteen digits: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, and F. The digits are called hexits. A hexit is the smallest unit of information in a computer. A hexit can be used to represent a single value, such as 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, or F, or it can be used to represent a single state, such as on or off.\r\n\r\nTo convert an octal number to hexadecimal, we can use the following algorithm:\r\n\r\n1. Convert the octal number to decimal.\r\n2. Convert the decimal number to hexadecimal.\r\n\r\n```\r\nInput  : 12\r\nOutput : A\r\n```\n\n---\n\n<CodeBlock slug=\"convert-octal-to-hexadecimal\" >\n\n```java\nimport java .util.*;\nclass ConvertOctalToHexadecimal\n{\n  public static int octToDec(int n)\n    {\n        int result = 0,temp=0;double p=0.0;\n        for (int i = 0; n > 0; i++) {\n            temp = n % 10;\n            p = Math.pow(8, i);\n            result += (temp * p);\n            n = n / 10;\n        }\n        return result;\n    }\n    public static String decTohex(int n)\n    {\n        int[] hexNum = new int[100];\n        int i = 0;\n        String result=\"\";\n        while (n != 0) {\n            hexNum[i] = n % 16;\n            n = n / 16;\n            i++;\n        }\n        for (int j = i - 1; j >= 0; j--) {\n            if (hexNum[j] > 9)\n                result+=(char)(55 + hexNum[j]);\n            else\n                result+=hexNum[j];\n        }\n        return result;\n    }\n    public static void main(String args[]) \n   {\n      Scanner sc=new Scanner(System.in);\n      System.out.println(\"Enter octal number \");\n      int n=sc.nextInt();\n      System.out.println(decTohex(octToDec(n)));\n       \n   }\n}\n```\n\n```js\n// JavaScript program to convert Octal\n// to Hexadecimal\n\n// Function to convert octal to decimal\nfunction octalToDecimal(n) {\n  var num = n;\n  var dec_value = 0;\n\n  var base = 1;\n\n  var temp = num;\n  while (temp > 0) {\n    // Extracting last digit\n    var last_digit = temp % 10;\n    temp = Math.floor(temp / 10);\n\n    // Multiplying last digit with\n    // appropriate base value and\n    // adding it to dec_value\n    dec_value += last_digit * base;\n\n    base = base * 8;\n  }\n  return dec_value;\n}\n\n// Function to convert decimal\n// to hexadecimal\nfunction decToHexa(n) {\n  // char array to store\n  // hexadecimal number\n  var hexaDeciNum = new Array(100);\n\n  // counter for hexadecimal\n  // number array\n  var i = 0;\n  while (n != 0) {\n    // Temporary variable to\n    // store remainder\n    var temp = 0;\n\n    // Storing remainder in\n    // temp variable.\n    temp = n % 16;\n\n    // Check if temp < 10\n    if (temp < 10) {\n      hexaDeciNum[i] = temp + 48;\n      i++;\n    } else {\n      hexaDeciNum[i] = temp + 87;\n      i++;\n    }\n    n = Math.floor(n / 16);\n  }\n\n  var ans = \"\";\n\n  // Printing hexadecimal number array\n  // in reverse order\n  for (var j = i - 1; j >= 0; j--) {\n    ans += String.fromCharCode(hexaDeciNum[j]);\n  }\n  return ans;\n}\n\n// Driver Code\nvar hexnum;\nvar decnum, octnum;\n\n// Taking 5123 as an example of\n// Octal Number.\noctnum = 5123;\n\n// Convert Octal to Decimal\ndecnum = octalToDecimal(octnum);\n\n// Convert Decimal to Hexadecimal\nhexnum = decToHexa(decnum);\n\nconsole.log(\"Equivalent Hexadecimal Value = \" + hexnum);\n```\n\n```kt\nimport kotlin.math.pow\n\nfun main() {\n    print(\"Enter Octal No. to Convert in Hexadecimal: \")\n    val num = readln().toInt()\n    println()\n    print(\"Hexadecimal of Octal No: $num is: \")\n    print(octalToHexadecimal(num))\n}\n\nprivate fun octalToHexadecimal(nums: Int): String {\n    val decimal = octalToDecimal(nums)\n    return decimalToHexadecimal(decimal)\n}\n\nprivate fun octalToDecimal(nums: Int): Int {\n    var decimal = 0\n    var digit = nums\n    var n = 0\n    while (digit > 0) {\n        val rem = digit % 10\n        decimal += rem * 8.0.pow(n).toInt()\n        digit /= 10\n        n++\n    }\n    return decimal\n}\n\nprivate fun decimalToHexadecimal(nums: Int): String {\n    var hexa = \"\"\n    var digit = nums\n    var n = 0\n    while (digit > 0) {\n        val rem = digit % 16\n        hexa = when (rem) {\n            10 -> \"A\"\n            11 -> \"B\"\n            12 -> \"C\"\n            13 -> \"D\"\n            14 -> \"E\"\n            15 -> \"F\"\n            else -> {\n                rem.toString()\n            }\n        } + hexa\n        digit /= 16\n    }\n    return hexa\n}\n```\n\n```ts\nfunction octalToDecimal(n:any){\n    var num = n;\n    var dec_value = 0;\n    var base = 1;\n   \n    var temp = num;\n    while (temp > 0){\n        var last_digit = temp % 10;\n        temp = Math.floor(temp / 10);\n        dec_value += last_digit * base;\n   \n        base = base * 8;\n    }\n    return dec_value;\n}\n\nfunction decToHexa(n:any){\n    var hexaDeciNum = new Array(100);\n    var i = 0;\n    while(n != 0){   \n        var temp  = 0;\n        temp = n % 16;\n        \n        if (temp < 10){\n            hexaDeciNum[i] = temp + 48;\n            i++;\n        }\n        else{\n            hexaDeciNum[i] = temp + 87;\n            i++;\n        }\n        n = Math.floor(n / 16);\n    }\n    var ans = \"\";\n    for(var j = i - 1; j >= 0; j--){\n        ans += String.fromCharCode(hexaDeciNum[j]);\n    }\n    return ans;\n}\n\nvar hexnum;\nvar decnum, octnum;\n\noctnum = 12;\n     \n// Convert Octal to Decimal\ndecnum = octalToDecimal(octnum);\n     \n// Convert Decimal to Hexadecimal\nhexnum = decToHexa(decnum);\n \nconsole.log(\"Equivalent Hexadecimal Value :\" + hexnum);\n```\n\n```py\noctnum = input()\n\n# Convert octal to decimal\ndecnum = int(octnum, 8)\n\n# Convert decimal to hexadecimal\nhexadecimal = hex(decnum).replace(\"0x\", \"\")\n\n# Printing the hexadecimal value\nprint(hexadecimal)\n```\n\n```php\n<?php\n\n$octal = readline();\n$possibleChars = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"];\n$hexaCharsMapping = [\"10\" => \"A\", \"11\" => \"B\", \"12\" => \"C\", \"13\" => \"D\", \"14\" => \"E\", \"15\" => \"F\"];\n\n$decimal = 0;\n\nforeach (str_split($octal) as $key => $value) {\n    if (!in_array($value, $possibleChars)) {\n        exit(\"Input contains an invalid value: \" . $value . \"\\n\");\n    } else {\n        $decimal += $value * pow(8, (int) (strlen($octal) - $key - 1));\n    }\n}\n\n$hexadecimal = \"\";\n\nfunction map($num)\n{\n    global $hexaCharsMapping;\n    if (in_array($num, [10, 11, 12, 13, 14, 15])) {\n        return $hexaCharsMapping[$num];\n    } else {\n        return $num;\n    }\n}\n\nwhile (true) {\n    $quocient = floor($decimal / 16);\n    if ($quocient < 1) {\n        $hexadecimal .= map($decimal);\n        break;\n    }\n    $remainder = $decimal % 16;\n    $decimal = $quocient;\n    $hexadecimal .= map($remainder);\n}\n\necho strrev($hexadecimal) . \"\\n\";\n\n?>\n```\n\n</CodeBlock>\n\n","latestUpdateDate":"2022-12-04T19:12:41Z"}