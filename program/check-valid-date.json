{"slug":"check-valid-date","title":"Check valid Date","trackId":3694,"tags":["Kotlin","Ruby","TypeScript","Python","GO","PHP"],"contributors":["rksp25","joao-vitor-souza","jaypavasiya","PoweredByCaffein","GalaxyLittlepaws","ahasunos","harshraj8843"],"contentHtml":"<h2>Write a program to check valid date</h2>\n<p>Check if a given date is valid or not.</p>\n<pre><code>Input  : 2019-02-29\nOutput : False\n</code></pre>\n<hr>\n<pre><code>import java.util.Scanner\nimport java.time.format.DateTimeFormatter\n\nfun main() {\n    print(\"Enter valid date format in yyyy-mm-dd : \")\n    println()\n    var input = readLine()\n\n    try {\n        println(\"Is $input valid date?: \" + CheckValidDate(input!!))\n    } catch (exception: Exception) {\n        println(\"Is $input valid date?: \" + false)\n    }\n\n}\n\nprivate fun CheckValidDate(date: String): Boolean {\n    val formatter = DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")\n    val formatted = formatter.parse(date)\n\n    return true\n}\n</code></pre>\n<pre><code># frozen_string_literal: true\n\nrequire 'date'\n\ndef check_valid_date(date)\n  Date.parse(date)\n  true\nrescue ArgumentError\n  false\nend\n\nif $PROGRAM_NAME == __FILE__\n  print 'Input  : '\n  date = gets.chomp\n  # Match the regular expression for a date\n  if date =~ /\\d{4}-\\d{2}-\\d{2}/\n    puts \"Output : #{check_valid_date(date)}\"\n  else\n    puts 'Output : Invalid date. Date must be in the format YYYY-MM-DD.'\n  end\nend\n</code></pre>\n<pre><code>function isValidDate(d: string | number | any): boolean {\n    if (Object.prototype.toString.call(d) === \"[object Date]\") {\n        // it is a date\n        if (isNaN(d)) { // d.getTime() or d.valueOf() will also work\n            // date object is not valid\n            return false\n        } else {\n            // date object is valid\n            return true\n        }\n    } else {\n        return false\n        // not a date object\n    }\n}\n\nconsole.log(isValidDate(new Date))\n</code></pre>\n<pre><code>from datetime import date\n\ntry:\n    year, month, day = tuple(map(int, input().split(\"-\")))\n    date(year=year, month=month, day=day)\nexcept ValueError:\n    print(\"False\")\nelse:\n    print(\"True\")\n</code></pre>\n<pre><code>package main\n\nimport (\n\t\"fmt\"\n\t\"time\"\n)\n\nfunc main() {\n\tvar input string\n\tfmt.Printf(\"Enter date in YYYY-MM-DD format: \")\n\tfmt.Scan(&#x26;input)\n\n\t_, err := time.Parse(\"2006-01-02\", input)\n\tif err != nil {\n\t\tfmt.Println(\"Invalid Date\")\n\t} else {\n\t\tfmt.Println(\"Valid Date\")\n\t}\n\n}\n</code></pre>\n<pre><code>&#x3C;?php\n// variables\n$day = 0;\n$month = 0;\n$year = 0;\n\n// turn yyyy-mm-dd into variables\nif (isset($_GET['date'])) {\n    $date = $_GET['date'];\n    $date = explode('-', $date);\n    $year = $date[0];\n    $month = $date[1];\n    $day = $date[2];\n}\n\n//if month is valid\nif ($month > 0 &#x26;&#x26; $month &#x3C; 13) {\n    // if day is valid\n    if ($day > 0 &#x26;&#x26; $day &#x3C; 32) {\n        // if year is valid\n        if ($year > 0 &#x26;&#x26; $year &#x3C; 9999) {\n            // if day is valid for month\n            if ($month == 2) {\n                if ($day &#x3C; 30 || ($day == 29 &#x26;&#x26; $year % 4 == 0)) {\n                    echo 'True';\n                } else {\n                    echo 'False';\n                }\n            } else if ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n                if ($day &#x3C; 31) {\n                    echo 'True';\n                } else {\n                    echo 'False';\n                }\n            } else {\n                echo 'True';\n            }\n        } else {\n            echo 'False';\n        }\n    } else {\n        echo 'False';\n    }\n} else {\n    echo 'False';\n}\n</code></pre>\n","markdown":"\n## Write a program to check valid date\n\nCheck if a given date is valid or not.\n\n```\nInput  : 2019-02-29\nOutput : False\n```\n\n---\n\n<CodeBlock slug=\"check-valid-date\" >\n\n```kt\nimport java.util.Scanner\nimport java.time.format.DateTimeFormatter\n\nfun main() {\n    print(\"Enter valid date format in yyyy-mm-dd : \")\n    println()\n    var input = readLine()\n\n    try {\n        println(\"Is $input valid date?: \" + CheckValidDate(input!!))\n    } catch (exception: Exception) {\n        println(\"Is $input valid date?: \" + false)\n    }\n\n}\n\nprivate fun CheckValidDate(date: String): Boolean {\n    val formatter = DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")\n    val formatted = formatter.parse(date)\n\n    return true\n}\n```\n\n```rb\n# frozen_string_literal: true\n\nrequire 'date'\n\ndef check_valid_date(date)\n  Date.parse(date)\n  true\nrescue ArgumentError\n  false\nend\n\nif $PROGRAM_NAME == __FILE__\n  print 'Input  : '\n  date = gets.chomp\n  # Match the regular expression for a date\n  if date =~ /\\d{4}-\\d{2}-\\d{2}/\n    puts \"Output : #{check_valid_date(date)}\"\n  else\n    puts 'Output : Invalid date. Date must be in the format YYYY-MM-DD.'\n  end\nend\n```\n\n```ts\nfunction isValidDate(d: string | number | any): boolean {\n    if (Object.prototype.toString.call(d) === \"[object Date]\") {\n        // it is a date\n        if (isNaN(d)) { // d.getTime() or d.valueOf() will also work\n            // date object is not valid\n            return false\n        } else {\n            // date object is valid\n            return true\n        }\n    } else {\n        return false\n        // not a date object\n    }\n}\n\nconsole.log(isValidDate(new Date))\n```\n\n```py\nfrom datetime import date\n\ntry:\n    year, month, day = tuple(map(int, input().split(\"-\")))\n    date(year=year, month=month, day=day)\nexcept ValueError:\n    print(\"False\")\nelse:\n    print(\"True\")\n```\n\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"time\"\n)\n\nfunc main() {\n\tvar input string\n\tfmt.Printf(\"Enter date in YYYY-MM-DD format: \")\n\tfmt.Scan(&input)\n\n\t_, err := time.Parse(\"2006-01-02\", input)\n\tif err != nil {\n\t\tfmt.Println(\"Invalid Date\")\n\t} else {\n\t\tfmt.Println(\"Valid Date\")\n\t}\n\n}\n```\n\n```php\n<?php\n// variables\n$day = 0;\n$month = 0;\n$year = 0;\n\n// turn yyyy-mm-dd into variables\nif (isset($_GET['date'])) {\n    $date = $_GET['date'];\n    $date = explode('-', $date);\n    $year = $date[0];\n    $month = $date[1];\n    $day = $date[2];\n}\n\n//if month is valid\nif ($month > 0 && $month < 13) {\n    // if day is valid\n    if ($day > 0 && $day < 32) {\n        // if year is valid\n        if ($year > 0 && $year < 9999) {\n            // if day is valid for month\n            if ($month == 2) {\n                if ($day < 30 || ($day == 29 && $year % 4 == 0)) {\n                    echo 'True';\n                } else {\n                    echo 'False';\n                }\n            } else if ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n                if ($day < 31) {\n                    echo 'True';\n                } else {\n                    echo 'False';\n                }\n            } else {\n                echo 'True';\n            }\n        } else {\n            echo 'False';\n        }\n    } else {\n        echo 'False';\n    }\n} else {\n    echo 'False';\n}\n```\n\n</CodeBlock>\n\n","latestUpdateDate":"2022-12-27T21:42:33Z"}