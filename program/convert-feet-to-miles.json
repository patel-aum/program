{"slug":"convert-feet-to-miles","title":"Convert feet to miles","trackId":377,"tags":["C","C++","JavaScript","Python","GO","PHP","Rust"],"contributors":["joao-vitor-souza","MadhuS-1605","jyotik09","anxkhn","praveenscience","EniolaAdemola","melko","harshraj8843"],"contentHtml":"<h2>Write a program to convert feet to miles</h2>\n<p>1 mile = 5280 feet</p>\n<pre><code>Input  : 26400\r\nOutput : 5\n</code></pre>\n<hr>\n<pre><code>#include &#x3C;stdio.h>\r\n\r\nint main()\r\n{\r\n    int feet;\r\n    scanf(\"%d\", &#x26;feet);\r\n    int miles = feet / 5280;\r\n    printf(\"%d\", miles);\r\n    // float miles = feet / 5280.0;\r\n    // printf(\"%f\", miles);\r\n    return 0;\r\n}\n</code></pre>\n<pre><code>#include &#x3C;iostream>\r\n\r\nint main()\r\n{\r\n    float feet;\r\n    std::cin >> feet;\r\n    float miles = feet / 5280;\r\n    std::cout &#x3C;&#x3C; feet;\r\n    return 0;\r\n}\n</code></pre>\n<pre><code>function feetToMiles(feet){\n    return feet/5280;\n}\n\nconsole.log('JS program to convert feet to miles: 1 mile = 5280 feet');\nlet input = 26400;\nconsole.log(`${input} feet is ${feetToMiles(input)} miles`);   // 5\n</code></pre>\n<pre><code>print(\"Python program to convert feet to miles \\n 1 mile = 5280 feet\")\n\n\ndef feetToMiles(num):\n    return num / 5280\n\n\nfeet = 26400\nmiles = feetToMiles(feet)\nprint(f\"Input  : {feet}\")\nprint(f\"Output : {miles}\")\n</code></pre>\n<pre><code>package main\n\nimport (\n\t\"fmt\"\n)\n\nfunc main() {\n\tvar feet float64\n  fmt.Println(\"Enter Feet(s):\")\n  fmt.Scan(&#x26;feet)\n  fmt.Println(\"Feet:\", (feet / 5280))\n}\n</code></pre>\n<pre><code>&#x3C;?php\n\t// Convert feet to miles.\n\t// 1 mile = 5280 feet\n\tfunction convert_feet_to_miles($ft) {\n\t\tif (!is_numeric($ft)) {\n\t\t\treturn null;\n\t\t}\n\t\treturn $ft / 5280;\n\t}\n\t// Tests\n\tprint_r(convert_feet_to_miles(5280));      // 1\n\tprint_r(convert_feet_to_miles(15280));     // 2.89\n\tprint_r(convert_feet_to_miles(\"5280\"));    // 1\n\tprint_r(convert_feet_to_miles(\"Hello\"));   // null or empty\n</code></pre>\n<pre><code>fn main() {\n    println!(\"This program converts feet to miles. Enter input:\");\n\n    let mut input = String::new();\n    std::io::stdin().read_line(&#x26;mut input).expect(\"error getting input!\");\n\n    let feet: f64 = input.trim().parse().expect(\"Input is not a valid number\");\n    let miles = feet / 5280.0;\n\n    println!(\"Miles: {miles}\");\n}\n</code></pre>\n","markdown":"\n## Write a program to convert feet to miles\n\n1 mile = 5280 feet\r\n\r\n```\r\nInput  : 26400\r\nOutput : 5\r\n```\n\n---\n\n<CodeBlock slug=\"convert-feet-to-miles\" >\n\n```c\n#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int feet;\r\n    scanf(\"%d\", &feet);\r\n    int miles = feet / 5280;\r\n    printf(\"%d\", miles);\r\n    // float miles = feet / 5280.0;\r\n    // printf(\"%f\", miles);\r\n    return 0;\r\n}\n```\n\n```cpp\n#include <iostream>\r\n\r\nint main()\r\n{\r\n    float feet;\r\n    std::cin >> feet;\r\n    float miles = feet / 5280;\r\n    std::cout << feet;\r\n    return 0;\r\n}\n```\n\n```js\nfunction feetToMiles(feet){\n    return feet/5280;\n}\n\nconsole.log('JS program to convert feet to miles: 1 mile = 5280 feet');\nlet input = 26400;\nconsole.log(`${input} feet is ${feetToMiles(input)} miles`);   // 5\n```\n\n```py\nprint(\"Python program to convert feet to miles \\n 1 mile = 5280 feet\")\n\n\ndef feetToMiles(num):\n    return num / 5280\n\n\nfeet = 26400\nmiles = feetToMiles(feet)\nprint(f\"Input  : {feet}\")\nprint(f\"Output : {miles}\")\n```\n\n```go\npackage main\n\nimport (\n\t\"fmt\"\n)\n\nfunc main() {\n\tvar feet float64\n  fmt.Println(\"Enter Feet(s):\")\n  fmt.Scan(&feet)\n  fmt.Println(\"Feet:\", (feet / 5280))\n}\n```\n\n```php\n<?php\n\t// Convert feet to miles.\n\t// 1 mile = 5280 feet\n\tfunction convert_feet_to_miles($ft) {\n\t\tif (!is_numeric($ft)) {\n\t\t\treturn null;\n\t\t}\n\t\treturn $ft / 5280;\n\t}\n\t// Tests\n\tprint_r(convert_feet_to_miles(5280));      // 1\n\tprint_r(convert_feet_to_miles(15280));     // 2.89\n\tprint_r(convert_feet_to_miles(\"5280\"));    // 1\n\tprint_r(convert_feet_to_miles(\"Hello\"));   // null or empty\n```\n\n```rs\nfn main() {\n    println!(\"This program converts feet to miles. Enter input:\");\n\n    let mut input = String::new();\n    std::io::stdin().read_line(&mut input).expect(\"error getting input!\");\n\n    let feet: f64 = input.trim().parse().expect(\"Input is not a valid number\");\n    let miles = feet / 5280.0;\n\n    println!(\"Miles: {miles}\");\n}\n```\n\n</CodeBlock>\n\n","latestUpdateDate":"2022-12-02T06:03:31Z"}