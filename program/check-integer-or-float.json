{"slug":"check-integer-or-float","title":"Check integer or float","trackId":4521,"tags":["C","C++","Java","JavaScript","Kotlin","TypeScript","Python","GO"],"contributors":["joao-vitor-souza","harshraj8843","priya1011","codingkush","mrajen27","tanishq-singh-2301","Excalibur1999","Forsigg"],"contentHtml":"<h2>Write a program to check integer or float</h2>\n<pre><code>Input  : 1\nOutput : Integer\n</code></pre>\n<hr>\n<pre><code>#include &#x3C;stdio.h>\n\nint main() {\n\n    char number[100];\n\n    int flag = 0;\n\n    printf(\"Enter the number to check integer or float: \");\n\n    scanf(\"%s\", number);\n\n    //loop through each character of input\n\n    for (int i = 0; number[i] != 0; i++) {\n\n    //if decimal \".\" is found, it means it is float\n\n        if (number[i] == '.') {\n\n            flag = 1;\n\n            break;\n\n        }\n\n    }\n\n    if (flag)\n\n    {\n\n       printf(\"\\n%s is a floating-point number.\\n\", number);\n\n    }\n\n    else{\n\n       printf(\"\\n%s is an integer number.\\n\", number);\n\n    }\n\n    return 0;\n\n}\n</code></pre>\n<pre><code>// C++ Program to Check Whether a Number is Integer or Not using While loop\n\n#include &#x3C;iostream>\n\nusing namespace std;\n\nint main() {\n\n    char random_number[100];\n\n    int f = 0, i = 0;\n\n    cout &#x3C;&#x3C; \"Enter the number to check integer or float: \";\n\n    cin >> random_number;\n\n    while (random_number[i++] != '\\0') {\n\n        if (random_number[i] == '.') {\n\n            f = 1;\n\n            break;\n\n        }\n\n    }\n\n    if (f)\n\n        cout &#x3C;&#x3C; endl &#x3C;&#x3C; random_number &#x3C;&#x3C; \" is a floating-point number.\\n\";\n\n    else\n\n        cout &#x3C;&#x3C; endl &#x3C;&#x3C; random_number &#x3C;&#x3C; \" is an integer number.\\n\";\n\n    return 0;\n\n}\n</code></pre>\n<pre><code>import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class CheckIntegerOrFloat {\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n        String number = br.readLine();\n        boolean isInt = false;\n        boolean isFloat = false;\n        try {\n            Integer.parseInt(number);\n            isInt = true;\n        } catch (NumberFormatException ignored) {\n\n        }\n\n        try {\n            Float.parseFloat(number);\n            isFloat = true;\n        } catch (NumberFormatException ignored) {\n\n        }\n\n        if (isInt) {\n            System.out.println(\"Integer\");\n        } else if (isFloat) {\n            System.out.println(\"Float\");\n        } else {\n            System.out.println(\"Neither Integer nor Float\");\n        }\n\n    }\n}\n</code></pre>\n<pre><code>/**\n * @name This program check the number is integer or float\n * @param {number} number\n * @returns {string}\n *\n * @example\n * ```js\n * const _int   = CheckIntegerOrFloat(2) // Integer \n * const _float = CheckIntegerOrFloat(3.21) // Float\n * ```\n *\n * @author Tanishq Singh\n */\nfunction CheckIntegerOrFloat(number) {\n\treturn number % 1 === 0 ? \"Integer\" : \"Float\";\n}\n\n// Console Tests\nconsole.log(CheckIntegerOrFloat(2) + \" // Integer\");\nconsole.log(CheckIntegerOrFloat(5.3) + \" // Float\");\n</code></pre>\n<pre><code>import java.util.*;\nfun main() {\n    val sc = Scanner(System.`in`)\n    println(\"Enter the number: \");\n    val number = sc.nextLine()\n    var isInteger = false;\n    var isFloat = false;\n    try {\n        number.toInt()\n        isInteger = true;\n    } catch (e: NumberFormatException)  {\n    }\n    try {\n        number.toFloat()\n        isFloat = true;\n    } catch (e: NumberFormatException)  {\n    }\n    if (isInteger) {\n        println(\"Integer\");\n    } else if (isFloat) {\n        println(\"Float\");\n    } else {\n        println(\"Neither float or Integer\");\n    }\n}\n</code></pre>\n<pre><code>/**\n * @name This program check the number is integer or float\n * @param {number} number\n * @returns {string}\n *\n * @example\n * ```ts\n * const _int: number   = CheckIntegerOrFloat(2) // Integer \n * const _float: number = CheckIntegerOrFloat(3.21) // Float\n * ```\n *\n * @author Tanishq Singh\n */\nfunction CheckIntegerOrFloat(number: number): \"Integer\" | \"Float\" {\n\treturn number % 1 === 0 ? \"Integer\" : \"Float\";\n}\n\n// Console Tests\nconsole.log(CheckIntegerOrFloat(2) + \" // Integer\");\nconsole.log(CheckIntegerOrFloat(5.3) + \" // Float\");\n</code></pre>\n<pre><code>def check_integer_or_float(input_str: str) -> None:\n    if \".\" in input_str:\n        print(\"Float\")\n    else:\n        print(\"Integer\")\n\n\nguess = input()\ncheck_integer_or_float(guess)\n</code></pre>\n<pre><code>package main\n\nimport (\n\t\"fmt\"\n\t\"log\"\n)\n\nfunc main() {\n\tvar input string\n\tfmt.Printf(\"Enter the number to check integer or float: \")\n\tfmt.Scanf(\"%s\", &#x26;input)\n\n\tif len(input) == 0 {\n\t\tlog.Println(\"Looks like you didn't enter anything. Please enter a number to continue!\")\n\t\treturn\n\t}\n\n\tflag := true\n\n\tfor i := 0; i &#x3C; len(input); i++{\n\t\tif input[i] == '.'{\n\t\t\tflag = false\n\t\t\tbreak\n\t\t}\n\t}\n\t\n\tif flag{\n\t\tfmt.Println(\"Integer\")\n\t}else{\n\t\tfmt.Println(\"Float\")\n\t}\n\n}\n</code></pre>\n","markdown":"\n## Write a program to check integer or float\n\n```\nInput  : 1\nOutput : Integer\n```\n\n---\n\n<CodeBlock slug=\"check-integer-or-float\" >\n\n```c\n#include <stdio.h>\n\nint main() {\n\n    char number[100];\n\n    int flag = 0;\n\n    printf(\"Enter the number to check integer or float: \");\n\n    scanf(\"%s\", number);\n\n    //loop through each character of input\n\n    for (int i = 0; number[i] != 0; i++) {\n\n    //if decimal \".\" is found, it means it is float\n\n        if (number[i] == '.') {\n\n            flag = 1;\n\n            break;\n\n        }\n\n    }\n\n    if (flag)\n\n    {\n\n       printf(\"\\n%s is a floating-point number.\\n\", number);\n\n    }\n\n    else{\n\n       printf(\"\\n%s is an integer number.\\n\", number);\n\n    }\n\n    return 0;\n\n}\n```\n\n```cpp\n// C++ Program to Check Whether a Number is Integer or Not using While loop\n\n#include <iostream>\n\nusing namespace std;\n\nint main() {\n\n    char random_number[100];\n\n    int f = 0, i = 0;\n\n    cout << \"Enter the number to check integer or float: \";\n\n    cin >> random_number;\n\n    while (random_number[i++] != '\\0') {\n\n        if (random_number[i] == '.') {\n\n            f = 1;\n\n            break;\n\n        }\n\n    }\n\n    if (f)\n\n        cout << endl << random_number << \" is a floating-point number.\\n\";\n\n    else\n\n        cout << endl << random_number << \" is an integer number.\\n\";\n\n    return 0;\n\n}\n```\n\n```java\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\n\npublic class CheckIntegerOrFloat {\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n        String number = br.readLine();\n        boolean isInt = false;\n        boolean isFloat = false;\n        try {\n            Integer.parseInt(number);\n            isInt = true;\n        } catch (NumberFormatException ignored) {\n\n        }\n\n        try {\n            Float.parseFloat(number);\n            isFloat = true;\n        } catch (NumberFormatException ignored) {\n\n        }\n\n        if (isInt) {\n            System.out.println(\"Integer\");\n        } else if (isFloat) {\n            System.out.println(\"Float\");\n        } else {\n            System.out.println(\"Neither Integer nor Float\");\n        }\n\n    }\n}\n```\n\n```js\n/**\n * @name This program check the number is integer or float\n * @param {number} number\n * @returns {string}\n *\n * @example\n * ```js\n * const _int   = CheckIntegerOrFloat(2) // Integer \n * const _float = CheckIntegerOrFloat(3.21) // Float\n * ```\n *\n * @author Tanishq Singh\n */\nfunction CheckIntegerOrFloat(number) {\n\treturn number % 1 === 0 ? \"Integer\" : \"Float\";\n}\n\n// Console Tests\nconsole.log(CheckIntegerOrFloat(2) + \" // Integer\");\nconsole.log(CheckIntegerOrFloat(5.3) + \" // Float\");\n```\n\n```kt\nimport java.util.*;\nfun main() {\n    val sc = Scanner(System.`in`)\n    println(\"Enter the number: \");\n    val number = sc.nextLine()\n    var isInteger = false;\n    var isFloat = false;\n    try {\n        number.toInt()\n        isInteger = true;\n    } catch (e: NumberFormatException)  {\n    }\n    try {\n        number.toFloat()\n        isFloat = true;\n    } catch (e: NumberFormatException)  {\n    }\n    if (isInteger) {\n        println(\"Integer\");\n    } else if (isFloat) {\n        println(\"Float\");\n    } else {\n        println(\"Neither float or Integer\");\n    }\n}\n```\n\n```ts\n/**\n * @name This program check the number is integer or float\n * @param {number} number\n * @returns {string}\n *\n * @example\n * ```ts\n * const _int: number   = CheckIntegerOrFloat(2) // Integer \n * const _float: number = CheckIntegerOrFloat(3.21) // Float\n * ```\n *\n * @author Tanishq Singh\n */\nfunction CheckIntegerOrFloat(number: number): \"Integer\" | \"Float\" {\n\treturn number % 1 === 0 ? \"Integer\" : \"Float\";\n}\n\n// Console Tests\nconsole.log(CheckIntegerOrFloat(2) + \" // Integer\");\nconsole.log(CheckIntegerOrFloat(5.3) + \" // Float\");\n```\n\n```py\ndef check_integer_or_float(input_str: str) -> None:\n    if \".\" in input_str:\n        print(\"Float\")\n    else:\n        print(\"Integer\")\n\n\nguess = input()\ncheck_integer_or_float(guess)\n```\n\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"log\"\n)\n\nfunc main() {\n\tvar input string\n\tfmt.Printf(\"Enter the number to check integer or float: \")\n\tfmt.Scanf(\"%s\", &input)\n\n\tif len(input) == 0 {\n\t\tlog.Println(\"Looks like you didn't enter anything. Please enter a number to continue!\")\n\t\treturn\n\t}\n\n\tflag := true\n\n\tfor i := 0; i < len(input); i++{\n\t\tif input[i] == '.'{\n\t\t\tflag = false\n\t\t\tbreak\n\t\t}\n\t}\n\t\n\tif flag{\n\t\tfmt.Println(\"Integer\")\n\t}else{\n\t\tfmt.Println(\"Float\")\n\t}\n\n}\n```\n\n</CodeBlock>\n\n","latestUpdateDate":"2022-12-02T06:03:31Z"}