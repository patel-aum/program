{"slug":"convert-hexadecimal-to-decimal","title":"Convert hexadecimal to decimal","trackId":1659,"tags":["C","C++","JavaScript","Kotlin","TypeScript","Python","PHP"],"contributors":["joao-vitor-souza","harshraj8843","UsmanFani","CodingWithHardik","AshishSharma1203","chetanchandel31","prasanta10"],"contentHtml":"<h2>Write a program to convert hexadecimal to decimal</h2>\n<p>Hexadecimal is a base-16 number system. It uses sixteen digits: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, and F. The digits are called hexits. A hexit is the smallest unit of information in a computer. A hexit can be used to represent a single value, such as 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, or F, or it can be used to represent a single state, such as on or off.</p>\n<p>To convert a hexadecimal number to decimal, we can use the following algorithm:</p>\n<ol>\n<li>Multiply the first hexit by 16^0.</li>\n<li>Multiply the second hexit by 16^1.</li>\n<li>Multiply the third hexit by 16^2.</li>\n<li>Multiply the fourth hexit by 16^3.</li>\n<li>Repeat steps 3 and 4 until the last hexit.</li>\n<li>Add the results of all the multiplications.</li>\n<li>The decimal number is the sum of all the multiplications.</li>\n</ol>\n<pre><code>Input  : A\r\nOutput : 10\n</code></pre>\n<hr>\n<pre><code>// C program to convert hexadecimal to decimal\n\n#include &#x3C;math.h>\n#include &#x3C;stdio.h>\n#include &#x3C;string.h>\nint main()\n{\n\tchar hexdecnumber[17] = \"2D\";\n\tint decimalnumber, place;\n\tint i = 0, val, len;\n\tdecimalnumber = 0;\n\n\t// finding the length of hexadecnumber\n\tlen = strlen(hexdecnumber);\n\tlen--;\n\n\t// while loop executes the statements until the\n\t// condition is false\n\twhile (hexdecnumber[i] != '\\0') {\n\n\t\t// finding the equivalent decimal digit for each\n\t\t// hexa decimal digit\n\t\tif (hexdecnumber[i] >= '0'\n\t\t\t&#x26;&#x26; hexdecnumber[i] &#x3C;= '9') {\n\t\t\tval = hexdecnumber[i] - 48;\n\t\t}\n\t\telse if (hexdecnumber[i] >= 'a'\n\t\t\t\t&#x26;&#x26; hexdecnumber[i] &#x3C;= 'f') {\n\t\t\tval = hexdecnumber[i] - 97 + 10;\n\t\t}\n\t\telse if (hexdecnumber[i] >= 'A'\n\t\t\t\t&#x26;&#x26; hexdecnumber[i] &#x3C;= 'F') {\n\t\t\tval = hexdecnumber[i] - 65 + 10;\n\t\t}\n\t\t// final decimal number\n\t\tdecimalnumber += val * pow(16, len);\n\t\tlen--;\n\t\ti++;\n\t}\n\t// printing the result\n\tprintf(\"Hexadecimal number = %s\\n\", hexdecnumber);\n\tprintf(\"Decimal number = %d\", decimalnumber);\n\treturn 0;\n}\n</code></pre>\n<pre><code>#include&#x3C;iostream>\n#include&#x3C;string.h>\nusing namespace std;\n//convert hexadecimal to decimal\nint convert(char num[]) {\n   int len = strlen(num);\n   int base = 1;\n   int temp = 0;\n   for (int i=len-1; i>=0; i--) {\n      if (num[i]>='0' &#x26;&#x26; num[i]&#x3C;='9') {\n         temp += (num[i] - 48)*base;\n         base = base * 16;\n      }\n      else if (num[i]>='A' &#x26;&#x26; num[i]&#x3C;='F') {\n         temp += (num[i] - 55)*base;\n         base = base*16;\n      }\n   }\n   return temp;\n}\nint main() {\n   char num[20];\n   cout&#x3C;&#x3C;\"Enter a Headecimal Number\"&#x3C;&#x3C;endl;\n   cin>>num;\n   cout&#x3C;&#x3C;num&#x3C;&#x3C;\" after converting to deciaml becomes : \"&#x3C;&#x3C;convert(num)&#x3C;&#x3C;endl;\n   return 0;\n}\n</code></pre>\n<pre><code>function hexadecimalToDecimal(hexString) {\n  var hex = hexString.toString();\n  var str = '0123456789ABCDEF';\n  var dec = 0;\n  for (var i = 0; i &#x3C; hex.length; i++) {\n    dec += str.indexOf(hex.charAt(i)) * Math.pow(16, hex.length - i - 1);\n  }\n  return dec;\n}\nconsole.log(hexadecimalToDecimal('A'));\n</code></pre>\n<pre><code>import kotlin.math.pow\n\nfun main() {\n    print(\"Enter Hexadecimal Number to Convert: \")\n    val num = readln()\n    print(\"Decimal Number is: ${convert(num)}\")\n}\n\nprivate fun convert(str: String): Int {\n    var num = 0\n    var i = str.lastIndex\n    str.forEach {\n        val digit = when (it) {\n            'A' -> 10\n            'B' -> 11\n            'C' -> 12\n            'D' -> 13\n            'E' -> 14\n            'F' -> 15\n            else -> it - '0'\n        }\n        num += 16.0.pow(i).toInt() * digit\n        i--\n    }\n    return num\n}\n</code></pre>\n<pre><code>const alphabetToNumberMap = {\n  a: 10,\n  b: 11,\n  c: 12,\n  d: 13,\n  e: 14,\n  f: 15,\n};\n\nconst convertHexadecimalToDecimal = (hexaDecimal: string): number => {\n  let sum = 0;\n\n  for (let i = hexaDecimal.length - 1; i >= 0; i--) {\n    const value =\n      alphabetToNumberMap[hexaDecimal[i].toLowerCase()] ||\n      Number(hexaDecimal[i]);\n\n    sum += value * Math.pow(16, hexaDecimal.length - 1 - i);\n  }\n\n  return sum;\n};\n\nconsole.log(convertHexadecimalToDecimal(\"a\"));\n</code></pre>\n<pre><code>hexadec = input()\n\ndec = int(hexadec, 16)\n\nprint(dec)\n</code></pre>\n<pre><code>&#x3C;?php\n\n$hexadecimal = readline();\n$possibleChars = [\n    \"0\",\n    \"1\",\n    \"2\",\n    \"3\",\n    \"4\",\n    \"5\",\n    \"6\",\n    \"7\",\n    \"8\",\n    \"9\",\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"a\",\n    \"b\",\n    \"c\",\n    \"d\",\n    \"e\",\n    \"f\"\n];\n$hexaCharsMapping = [\n    \"A\" => \"10\",\n    \"a\" => \"10\",\n    \"B\" => \"11\",\n    \"b\" => \"11\",\n    \"C\" => \"12\",\n    \"c\" => \"12\",\n    \"D\" => \"13\",\n    \"d\" => \"13\",\n    \"E\" => \"14\",\n    \"e\" => \"14\",\n    \"F\" => \"15\",\n    \"f\" => \"15\",\n];\n$decimal = 0;\n\nfunction map($num)\n{\n    global $hexaCharsMapping;\n    if (in_array($num, [\"A\", \"a\", \"B\", \"b\", \"C\", \"c\", \"D\", \"d\", \"E\", \"e\", \"F\", \"f\"])) {\n        return $hexaCharsMapping[$num];\n    } else {\n        return $num;\n    }\n}\n\nforeach (str_split($hexadecimal) as $key => $value) {\n    if (!in_array($value, $possibleChars)) {\n        exit(\"Input contains an invalid value: \" . $value . \"\\n\");\n    } else {\n        $decimal += map($value) * pow(16, (int) (strlen($hexadecimal) - $key - 1));\n    }\n}\n\necho $decimal . \"\\n\";\n\n?>\n</code></pre>\n","markdown":"\n## Write a program to convert hexadecimal to decimal\n\nHexadecimal is a base-16 number system. It uses sixteen digits: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, and F. The digits are called hexits. A hexit is the smallest unit of information in a computer. A hexit can be used to represent a single value, such as 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, or F, or it can be used to represent a single state, such as on or off.\r\n\r\nTo convert a hexadecimal number to decimal, we can use the following algorithm:\r\n\r\n1. Multiply the first hexit by 16^0.\r\n2. Multiply the second hexit by 16^1.\r\n3. Multiply the third hexit by 16^2.\r\n4. Multiply the fourth hexit by 16^3.\r\n5. Repeat steps 3 and 4 until the last hexit.\r\n6. Add the results of all the multiplications.\r\n7. The decimal number is the sum of all the multiplications.\r\n\r\n```\r\nInput  : A\r\nOutput : 10\r\n```\n\n---\n\n<CodeBlock slug=\"convert-hexadecimal-to-decimal\" >\n\n```c\n// C program to convert hexadecimal to decimal\n\n#include <math.h>\n#include <stdio.h>\n#include <string.h>\nint main()\n{\n\tchar hexdecnumber[17] = \"2D\";\n\tint decimalnumber, place;\n\tint i = 0, val, len;\n\tdecimalnumber = 0;\n\n\t// finding the length of hexadecnumber\n\tlen = strlen(hexdecnumber);\n\tlen--;\n\n\t// while loop executes the statements until the\n\t// condition is false\n\twhile (hexdecnumber[i] != '\\0') {\n\n\t\t// finding the equivalent decimal digit for each\n\t\t// hexa decimal digit\n\t\tif (hexdecnumber[i] >= '0'\n\t\t\t&& hexdecnumber[i] <= '9') {\n\t\t\tval = hexdecnumber[i] - 48;\n\t\t}\n\t\telse if (hexdecnumber[i] >= 'a'\n\t\t\t\t&& hexdecnumber[i] <= 'f') {\n\t\t\tval = hexdecnumber[i] - 97 + 10;\n\t\t}\n\t\telse if (hexdecnumber[i] >= 'A'\n\t\t\t\t&& hexdecnumber[i] <= 'F') {\n\t\t\tval = hexdecnumber[i] - 65 + 10;\n\t\t}\n\t\t// final decimal number\n\t\tdecimalnumber += val * pow(16, len);\n\t\tlen--;\n\t\ti++;\n\t}\n\t// printing the result\n\tprintf(\"Hexadecimal number = %s\\n\", hexdecnumber);\n\tprintf(\"Decimal number = %d\", decimalnumber);\n\treturn 0;\n}\n```\n\n```cpp\n#include<iostream>\n#include<string.h>\nusing namespace std;\n//convert hexadecimal to decimal\nint convert(char num[]) {\n   int len = strlen(num);\n   int base = 1;\n   int temp = 0;\n   for (int i=len-1; i>=0; i--) {\n      if (num[i]>='0' && num[i]<='9') {\n         temp += (num[i] - 48)*base;\n         base = base * 16;\n      }\n      else if (num[i]>='A' && num[i]<='F') {\n         temp += (num[i] - 55)*base;\n         base = base*16;\n      }\n   }\n   return temp;\n}\nint main() {\n   char num[20];\n   cout<<\"Enter a Headecimal Number\"<<endl;\n   cin>>num;\n   cout<<num<<\" after converting to deciaml becomes : \"<<convert(num)<<endl;\n   return 0;\n}\n```\n\n```js\nfunction hexadecimalToDecimal(hexString) {\n  var hex = hexString.toString();\n  var str = '0123456789ABCDEF';\n  var dec = 0;\n  for (var i = 0; i < hex.length; i++) {\n    dec += str.indexOf(hex.charAt(i)) * Math.pow(16, hex.length - i - 1);\n  }\n  return dec;\n}\nconsole.log(hexadecimalToDecimal('A'));\n```\n\n```kt\nimport kotlin.math.pow\n\nfun main() {\n    print(\"Enter Hexadecimal Number to Convert: \")\n    val num = readln()\n    print(\"Decimal Number is: ${convert(num)}\")\n}\n\nprivate fun convert(str: String): Int {\n    var num = 0\n    var i = str.lastIndex\n    str.forEach {\n        val digit = when (it) {\n            'A' -> 10\n            'B' -> 11\n            'C' -> 12\n            'D' -> 13\n            'E' -> 14\n            'F' -> 15\n            else -> it - '0'\n        }\n        num += 16.0.pow(i).toInt() * digit\n        i--\n    }\n    return num\n}\n```\n\n```ts\nconst alphabetToNumberMap = {\n  a: 10,\n  b: 11,\n  c: 12,\n  d: 13,\n  e: 14,\n  f: 15,\n};\n\nconst convertHexadecimalToDecimal = (hexaDecimal: string): number => {\n  let sum = 0;\n\n  for (let i = hexaDecimal.length - 1; i >= 0; i--) {\n    const value =\n      alphabetToNumberMap[hexaDecimal[i].toLowerCase()] ||\n      Number(hexaDecimal[i]);\n\n    sum += value * Math.pow(16, hexaDecimal.length - 1 - i);\n  }\n\n  return sum;\n};\n\nconsole.log(convertHexadecimalToDecimal(\"a\"));\n```\n\n```py\nhexadec = input()\n\ndec = int(hexadec, 16)\n\nprint(dec)\n```\n\n```php\n<?php\n\n$hexadecimal = readline();\n$possibleChars = [\n    \"0\",\n    \"1\",\n    \"2\",\n    \"3\",\n    \"4\",\n    \"5\",\n    \"6\",\n    \"7\",\n    \"8\",\n    \"9\",\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"a\",\n    \"b\",\n    \"c\",\n    \"d\",\n    \"e\",\n    \"f\"\n];\n$hexaCharsMapping = [\n    \"A\" => \"10\",\n    \"a\" => \"10\",\n    \"B\" => \"11\",\n    \"b\" => \"11\",\n    \"C\" => \"12\",\n    \"c\" => \"12\",\n    \"D\" => \"13\",\n    \"d\" => \"13\",\n    \"E\" => \"14\",\n    \"e\" => \"14\",\n    \"F\" => \"15\",\n    \"f\" => \"15\",\n];\n$decimal = 0;\n\nfunction map($num)\n{\n    global $hexaCharsMapping;\n    if (in_array($num, [\"A\", \"a\", \"B\", \"b\", \"C\", \"c\", \"D\", \"d\", \"E\", \"e\", \"F\", \"f\"])) {\n        return $hexaCharsMapping[$num];\n    } else {\n        return $num;\n    }\n}\n\nforeach (str_split($hexadecimal) as $key => $value) {\n    if (!in_array($value, $possibleChars)) {\n        exit(\"Input contains an invalid value: \" . $value . \"\\n\");\n    } else {\n        $decimal += map($value) * pow(16, (int) (strlen($hexadecimal) - $key - 1));\n    }\n}\n\necho $decimal . \"\\n\";\n\n?>\n```\n\n</CodeBlock>\n\n","latestUpdateDate":"2022-12-05T02:19:57Z"}