{"slug":"convert-octal-to-decimal","title":"Convert octal to decimal","trackId":602,"tags":["C","C++","Java","JavaScript","TypeScript","Python"],"contributors":["joao-vitor-souza","harshraj8843","AshishSharma1203","galahad42","adityachandra1","kashyapkumar-pdf","RShalman","ashankritwik07"],"contentHtml":"<h2>Write a program to convert octal to decimal</h2>\n<p>Octal is a base-8 number system. It uses only eight digits: 0, 1, 2, 3, 4, 5, 6, and 7. The digits are called octits. An octit is the smallest unit of information in a computer. An octit can be used to represent a single value, such as 0, 1, 2, 3, 4, 5, 6, or 7, or it can be used to represent a single state, such as on or off.</p>\n<p>To convert an octal number to decimal, we can use the following algorithm:</p>\n<ol>\n<li>Multiply the first octit by 8^0.</li>\n<li>Multiply the second octit by 8^1.</li>\n<li>Multiply the third octit by 8^2.</li>\n<li>Multiply the fourth octit by 8^3.</li>\n<li>Repeat steps 3 and 4 until the last octit.</li>\n<li>Add the results of all the multiplications.</li>\n<li>The decimal number is the sum of all the multiplications.</li>\n</ol>\n<pre><code>Input  : 12\nOutput : 10\n</code></pre>\n<hr>\n<pre><code>/*\nLogic : \nTo convert an octal number to decimal, we can use the following algorithm:\n\nMultiply the first octit by 8^0.\nMultiply the second octit by 8^1.\nMultiply the third octit by 8^2.\nMultiply the fourth octit by 8^3.\nRepeat steps 3 and 4 until the last octit.\nAdd the results of all the multiplications.\nThe decimal number is the sum of all the multiplications.\n*/\n\n                  ------->>>>>>>>>>>------------>>>>>>>>>>>>________CODE________&#x3C;&#x3C;&#x3C;&#x3C;&#x3C;&#x3C;&#x3C;&#x3C;&#x3C;&#x3C;&#x3C;&#x3C;------------&#x3C;&#x3C;&#x3C;&#x3C;&#x3C;&#x3C;&#x3C;&#x3C;&#x3C;&#x3C;&#x3C;&#x3C;&#x3C;&#x3C;&#x3C;&#x3C;&#x3C;&#x3C;&#x3C;&#x3C;&#x3C;&#x3C;&#x3C;&#x3C;&#x3C;&#x3C;&#x3C;\n\n#include &#x3C;stdio.h>\n#include &#x3C;math.h>\nint OctalToDecimal(int num)\n{\n    int x = 0;\n    int ans = 0;\n\n    while (num > 0)\n    {\n\n        // obtaining the right-most digit of num\n        int y = num % 10;\n\n        // Since the right-most digits were previously scanned in the previous step, divide num by 10 to remove them.\n        num /= 10;\n\n        ans += y * pow(8, x);\n        ++x;\n    }\n\n    return ans;\n}\nint main()\n{\n    int num;\n    printf(\"Enter Octal Number: \");\n    scanf(\"%d\", &#x26;num);\n    printf(\"\\n\");\n    printf(\"Decimal Number is : %d\", OctalToDecimal(num));\n    return 0;\n}\n</code></pre>\n<pre><code>/**\n * Write a C++ program to convert octal to decimal\n * Input: 12\n * Output: 10\n */\n\n#include &#x3C;iostream>\n#include &#x3C;cmath>\nusing namespace std;\n\nclass Num{\n    int octal;\n    int decimal;\n    public:\n        Num(int o){\n            octal = o;\n            decimal = 0;\n        }\n        void convertToDecimal(){\n            int num = octal;\n            int i   = 0;\n            while (num != 0)\n            {\n                int rem = num % 10;\n                num /= 10;\n                decimal += rem * pow(8, i);\n                ++i;\n            }\n        }\n        void showDecimal(){\n            cout &#x3C;&#x3C; \"Decimal: \" &#x3C;&#x3C; decimal &#x3C;&#x3C; endl;\n        }\n};\n\nint main(){\n    int n;\n    cout &#x3C;&#x3C; \"Enter octal number: \";\n    cin >> n;\n    Num nmbr = Num(n);\n    nmbr.convertToDecimal();\n    nmbr.showDecimal();\n    return 0;\n}\n</code></pre>\n<pre><code>package MyClass;\nimport java.util.Scanner;\npublic class ConvertOctalToDecimal {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tint f = convertOctaltoDecimal(n , 8);\n\t\tSystem.out.println(f);\n\n\t}\n\tpublic static int convertOctaltoDecimal(int n , int b ) {\n\t\tint rv = 0;\n\t\tint p = 1;\n\t\twhile(n>0) {\n\t\t\tint dig = n % 10;\n\t\t\tn = n / 10;\n\t\t\trv += dig * p;\n\t\t\tp = p* b;\n\t\t}\n\t\treturn rv;\n\t}\n\n}\n</code></pre>\n<pre><code>function octalToDecimal(n) {\n\n    let dec_value = 0;\n    let base = 1;\n\n    let temp = n;\n    while (temp) {\n        let last_digit = temp % 10;\n        temp = Math.floor(temp / 10);\n        dec_value += last_digit * base;\n        base = base * 8;\n    }\n\n    return dec_value;\n}\n\nconsole.log(octalToDecimal(69));\nconsole.log(octalToDecimal(69420));\n</code></pre>\n<pre><code>export type Octal = number\nexport type Decimal = number\n\nexport function convertOctalToDecimal(octal: Octal): Decimal {\n    let decimal: number = 0;\n    let base = 1\n    const octits = `${octal}`.split('')\n\n    for(let i = octits.length - 1; i >= 0; i--) {\n        decimal += +octits[i] * base\n        base *= 8\n    }\n\n    return decimal\n}\n</code></pre>\n<pre><code>def octalToDecimal(n):\n\n    num = n\n    dec_value = 0\n    base = 1\n\n    temp = num\n    while temp:\n\n        last_digit = temp % 10\n        temp = int(temp / 10)\n\n        dec_value += last_digit * base\n\n        base = base * 8\n\n    return dec_value\n\n\nnum = 67\nprint(octalToDecimal(num))\n</code></pre>\n","markdown":"\n## Write a program to convert octal to decimal\n\nOctal is a base-8 number system. It uses only eight digits: 0, 1, 2, 3, 4, 5, 6, and 7. The digits are called octits. An octit is the smallest unit of information in a computer. An octit can be used to represent a single value, such as 0, 1, 2, 3, 4, 5, 6, or 7, or it can be used to represent a single state, such as on or off.\n\nTo convert an octal number to decimal, we can use the following algorithm:\n\n1. Multiply the first octit by 8^0.\n2. Multiply the second octit by 8^1.\n3. Multiply the third octit by 8^2.\n4. Multiply the fourth octit by 8^3.\n5. Repeat steps 3 and 4 until the last octit.\n6. Add the results of all the multiplications.\n7. The decimal number is the sum of all the multiplications.\n\n```\nInput  : 12\nOutput : 10\n```\n\n---\n\n<CodeBlock slug=\"convert-octal-to-decimal\" >\n\n```c\n/*\nLogic : \nTo convert an octal number to decimal, we can use the following algorithm:\n\nMultiply the first octit by 8^0.\nMultiply the second octit by 8^1.\nMultiply the third octit by 8^2.\nMultiply the fourth octit by 8^3.\nRepeat steps 3 and 4 until the last octit.\nAdd the results of all the multiplications.\nThe decimal number is the sum of all the multiplications.\n*/\n\n                  ------->>>>>>>>>>>------------>>>>>>>>>>>>________CODE________<<<<<<<<<<<<------------<<<<<<<<<<<<<<<<<<<<<<<<<<<\n\n#include <stdio.h>\n#include <math.h>\nint OctalToDecimal(int num)\n{\n    int x = 0;\n    int ans = 0;\n\n    while (num > 0)\n    {\n\n        // obtaining the right-most digit of num\n        int y = num % 10;\n\n        // Since the right-most digits were previously scanned in the previous step, divide num by 10 to remove them.\n        num /= 10;\n\n        ans += y * pow(8, x);\n        ++x;\n    }\n\n    return ans;\n}\nint main()\n{\n    int num;\n    printf(\"Enter Octal Number: \");\n    scanf(\"%d\", &num);\n    printf(\"\\n\");\n    printf(\"Decimal Number is : %d\", OctalToDecimal(num));\n    return 0;\n}\n```\n\n```cpp\n/**\n * Write a C++ program to convert octal to decimal\n * Input: 12\n * Output: 10\n */\n\n#include <iostream>\n#include <cmath>\nusing namespace std;\n\nclass Num{\n    int octal;\n    int decimal;\n    public:\n        Num(int o){\n            octal = o;\n            decimal = 0;\n        }\n        void convertToDecimal(){\n            int num = octal;\n            int i   = 0;\n            while (num != 0)\n            {\n                int rem = num % 10;\n                num /= 10;\n                decimal += rem * pow(8, i);\n                ++i;\n            }\n        }\n        void showDecimal(){\n            cout << \"Decimal: \" << decimal << endl;\n        }\n};\n\nint main(){\n    int n;\n    cout << \"Enter octal number: \";\n    cin >> n;\n    Num nmbr = Num(n);\n    nmbr.convertToDecimal();\n    nmbr.showDecimal();\n    return 0;\n}\n```\n\n```java\npackage MyClass;\nimport java.util.Scanner;\npublic class ConvertOctalToDecimal {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n = sc.nextInt();\n\t\tint f = convertOctaltoDecimal(n , 8);\n\t\tSystem.out.println(f);\n\n\t}\n\tpublic static int convertOctaltoDecimal(int n , int b ) {\n\t\tint rv = 0;\n\t\tint p = 1;\n\t\twhile(n>0) {\n\t\t\tint dig = n % 10;\n\t\t\tn = n / 10;\n\t\t\trv += dig * p;\n\t\t\tp = p* b;\n\t\t}\n\t\treturn rv;\n\t}\n\n}\n```\n\n```js\nfunction octalToDecimal(n) {\n\n    let dec_value = 0;\n    let base = 1;\n\n    let temp = n;\n    while (temp) {\n        let last_digit = temp % 10;\n        temp = Math.floor(temp / 10);\n        dec_value += last_digit * base;\n        base = base * 8;\n    }\n\n    return dec_value;\n}\n\nconsole.log(octalToDecimal(69));\nconsole.log(octalToDecimal(69420));\n```\n\n```ts\nexport type Octal = number\nexport type Decimal = number\n\nexport function convertOctalToDecimal(octal: Octal): Decimal {\n    let decimal: number = 0;\n    let base = 1\n    const octits = `${octal}`.split('')\n\n    for(let i = octits.length - 1; i >= 0; i--) {\n        decimal += +octits[i] * base\n        base *= 8\n    }\n\n    return decimal\n}\n```\n\n```py\ndef octalToDecimal(n):\n\n    num = n\n    dec_value = 0\n    base = 1\n\n    temp = num\n    while temp:\n\n        last_digit = temp % 10\n        temp = int(temp / 10)\n\n        dec_value += last_digit * base\n\n        base = base * 8\n\n    return dec_value\n\n\nnum = 67\nprint(octalToDecimal(num))\n```\n\n</CodeBlock>\n\n","latestUpdateDate":"2022-12-02T06:03:31Z"}