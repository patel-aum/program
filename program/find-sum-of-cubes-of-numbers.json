{"slug":"find-sum-of-cubes-of-numbers","title":"Find sum of cubes of numbers","trackId":853,"tags":["C","C++","Java","TypeScript","Python","GO"],"contributors":["joao-vitor-souza","harshraj8843","MadhuS-1605","rajdip-b","Greeshma-frontier"],"contentHtml":"<h2>Write a program to find sum of cubes of numbers</h2>\n<p>Suppose you have a list of numbers, and you want to find the sum of the cubes of those numbers. For example, if you have the list <code>[1, 2, 3]</code>, you want to find the sum of the cubes of those numbers, which is <code>1^3 + 2^3 + 3^3 = 36</code>.</p>\n<pre><code>Input  : 1 2 3 4 5\r\nOutput : 225\n</code></pre>\n<hr>\n<pre><code>#include &#x3C;stdio.h>\n\nint main() {\n    int size;\n    scanf(\"%d\", &#x26;size);\n    int arr[size];\n    for (int i = 0; i &#x3C; size; i++) {\n        scanf(\"%d\", &#x26;arr[i]);\n    }\n    int sum = 0;\n    for (int i = 0; i &#x3C; size; i++) {\n        sum += arr[i] * arr[i] * arr[i];\n    }\n    printf(\"%d\\n\", sum);\n    return 0;\n}\n</code></pre>\n<pre><code>#include &#x3C;iostream>\nusing namespace std;\n\nint main() {\n    int size;\n    cin>>size;\n    int arr[size];\n    for(int i=0;i&#x3C;size;i++){\n        cin>>arr[i];\n    }\n    int sum=0;\n    for(int i=0;i&#x3C;size;i++){\n        sum+=arr[i]*arr[i]*arr[i];\n    }\n    cout&#x3C;&#x3C;sum;\n    return 0;\n}\n</code></pre>\n<pre><code>import java.util.Scanner;\n\npublic class FindSumOfCubesOfNumbers {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int size = sc.nextInt();\n        int[] arr = new int[size];\n        for (int i = 0; i &#x3C; size; i++) {\n            arr[i] = sc.nextInt();\n        }\n        int sum = 0;\n        for (int i = 0; i &#x3C; size; i++) {\n            sum += Math.pow(arr[i], 3);\n        }\n        System.out.println(sum);\n        sc.close();\n    }\n\n}\n</code></pre>\n<pre><code>function sumOfCubeOfNumbers(num: number): number {\n    if (num === 0) {\n        return 0\n    }\n    else {\n        return Math.pow((num % 10), 3) + sumOfCubeOfNumbers(Math.floor(num / 10));\n    }\n}\n\nconsole.log(\"Sum of Cube of numbers\", sumOfCubeOfNumbers(12345));\n</code></pre>\n<pre><code>from functools import reduce\n\nprint(\n    \"Sum of cubes:\",\n    reduce(\n        lambda x, y: x + y**3,\n        [int(input()) for _ in range(int(input(\"How many numbers: \")))],\n    ),\n)\n</code></pre>\n<pre><code>package main\n\nimport \"fmt\"\n\nfunc findArraySum(arr []int) int {\n\tres := 0\n\tfor i := 0; i &#x3C; len(arr); i++ {\n\t\tres += arr[i] * arr[i] * arr[i]\n\t}\n\treturn res\n}\n\nfunc main() {\n\tfmt.Println(findArraySum([]int{1, 2, 3, 4, 5}))\n}\n</code></pre>\n","markdown":"\n## Write a program to find sum of cubes of numbers\n\nSuppose you have a list of numbers, and you want to find the sum of the cubes of those numbers. For example, if you have the list `[1, 2, 3]`, you want to find the sum of the cubes of those numbers, which is `1^3 + 2^3 + 3^3 = 36`.\r\n\r\n```\r\nInput  : 1 2 3 4 5\r\nOutput : 225\r\n```\n\n---\n\n<CodeBlock slug=\"find-sum-of-cubes-of-numbers\" >\n\n```c\n#include <stdio.h>\n\nint main() {\n    int size;\n    scanf(\"%d\", &size);\n    int arr[size];\n    for (int i = 0; i < size; i++) {\n        scanf(\"%d\", &arr[i]);\n    }\n    int sum = 0;\n    for (int i = 0; i < size; i++) {\n        sum += arr[i] * arr[i] * arr[i];\n    }\n    printf(\"%d\\n\", sum);\n    return 0;\n}\n```\n\n```cpp\n#include <iostream>\nusing namespace std;\n\nint main() {\n    int size;\n    cin>>size;\n    int arr[size];\n    for(int i=0;i<size;i++){\n        cin>>arr[i];\n    }\n    int sum=0;\n    for(int i=0;i<size;i++){\n        sum+=arr[i]*arr[i]*arr[i];\n    }\n    cout<<sum;\n    return 0;\n}\n```\n\n```java\nimport java.util.Scanner;\n\npublic class FindSumOfCubesOfNumbers {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int size = sc.nextInt();\n        int[] arr = new int[size];\n        for (int i = 0; i < size; i++) {\n            arr[i] = sc.nextInt();\n        }\n        int sum = 0;\n        for (int i = 0; i < size; i++) {\n            sum += Math.pow(arr[i], 3);\n        }\n        System.out.println(sum);\n        sc.close();\n    }\n\n}\n```\n\n```ts\nfunction sumOfCubeOfNumbers(num: number): number {\n    if (num === 0) {\n        return 0\n    }\n    else {\n        return Math.pow((num % 10), 3) + sumOfCubeOfNumbers(Math.floor(num / 10));\n    }\n}\n\nconsole.log(\"Sum of Cube of numbers\", sumOfCubeOfNumbers(12345));\n```\n\n```py\nfrom functools import reduce\n\nprint(\n    \"Sum of cubes:\",\n    reduce(\n        lambda x, y: x + y**3,\n        [int(input()) for _ in range(int(input(\"How many numbers: \")))],\n    ),\n)\n```\n\n```go\npackage main\n\nimport \"fmt\"\n\nfunc findArraySum(arr []int) int {\n\tres := 0\n\tfor i := 0; i < len(arr); i++ {\n\t\tres += arr[i] * arr[i] * arr[i]\n\t}\n\treturn res\n}\n\nfunc main() {\n\tfmt.Println(findArraySum([]int{1, 2, 3, 4, 5}))\n}\n```\n\n</CodeBlock>\n\n","latestUpdateDate":"2022-12-02T06:03:31Z"}