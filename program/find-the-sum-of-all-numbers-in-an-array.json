{"slug":"find-the-sum-of-all-numbers-in-an-array","title":"Find the sum of all numbers in an array","trackId":2253,"tags":["Java","JavaScript","Kotlin","TypeScript","Python","GO","PHP"],"contributors":["harshraj8843","joao-vitor-souza","Shivaraj21","rahmat-st","Ladam0203","GodWin1100","25011908vardhan","PoweredByCaffein"],"contentHtml":"<h2>Write a program to find the sum of all numbers in an array</h2>\n<pre><code>Input  : [1, 2, 3, 4, 5]\nOutput : 15\n</code></pre>\n<hr>\n<pre><code>import java.util.Scanner;\n\npublic class FindSumOfAllNumbers {\n    public static void main(String[] args) {\n        int n, sum = 0;\n\n        Scanner sc = new Scanner(System.in);\n        System.out.println(\"Enter the size of array\");\n        n = sc.nextInt();\n\n        System.out.println(\"Enter the array elements\");\n        int[] arr = new int[n];\n        for (int i = 0; i &#x3C; arr.length; i++) {\n            arr[i] = sc.nextInt();\n        }\n\n        for (int i = 0; i &#x3C; arr.length; i++) {\n            sum += arr[i];\n        }\n        System.out.println(\"Sum of all numbers in an array = \" + sum);\n    }\n}\n</code></pre>\n<pre><code>/**\n * Return sum of all the numbers in array\n * @param {Array} arr Array of numbers\n * @returns {number} sum of array\n */\nconst getArraySum = (arr) => {\n  if (!Array.isArray(arr)) throw \"Parameter should be typeof an Array\";\n  return arr.reduce((acc, e, i) => {\n    if (typeof e !== \"number\")\n      throw `Element${e} at Index ${i}: is not an number`;\n    return e + acc;\n  }, 0);\n};\n\ntry {\n  console.log(getArraySum([1, 2, 3, 4, 5]));\n} catch (e) {\n  console.log(e);\n}\ntry {\n  console.log(getArraySum([1, 2, 3, \"a\", 5]));\n} catch (e) {\n  console.log(e);\n}\ntry {\n  console.log(getArraySum(0));\n} catch (e) {\n  console.log(e);\n}\n</code></pre>\n<pre><code>// #1 - using built-in function\nfun findTheSumOfAllNumbersInAnArray1(numbers: Array&#x3C;Int>): Int = numbers.sum()\n\n// #2 - using looping\nfun findTheSumOfAllNumbersInAnArray2(numbers: Array&#x3C;Int>): Int {\n\tvar total = 0\n\t\n\tfor (number in numbers) {\n\t\ttotal += number\n\t}\n\t\n\treturn total\n}\n\nfun main() {\n\tval inputs = arrayOf&#x3C;Int>(1, 2, 3, 4, 5)\n\t// println(findTheSumOfAllNumbersInAnArray1(inputs))\n\tprintln(findTheSumOfAllNumbersInAnArray2(inputs))\n}\n</code></pre>\n<pre><code>function findSumOfAllNumbersInAnArray(...args: Array&#x3C;number>) {\n    let numbers = [...args]\n    let sum = 0\n    for (let x of numbers) {\n        sum = sum + x\n    }\n\n    return sum\n}\n</code></pre>\n<pre><code>print(\n    \"Sum of all numbers:\",\n    sum([int(input()) for _ in range(int(input(\"How many numbers: \")))]),\n)\n</code></pre>\n<pre><code>package main\nimport \"fmt\"\n\nfunc main()  {\n\tarray := []int{1,2,3,4,5}\n\tfmt.Println(SumOfArray(array))\n}\n\nfunc SumOfArray(array []int) int {\n\tsum := 0\n\tfor i := 0; i &#x3C; len(array); i++ {\n\t\tsum += array[i]\n\t}\n\treturn sum\n}\n</code></pre>\n<pre><code>&#x3C;?php\n\n$array = readline(\"Enter the array elements separated by space: \");\n\n$array = explode(\" \", $array);\n$result = 0;\nforeach ($array as $v) {\n    $result += $v;\n}\necho \"Sum of all elements of the array: \" ,$result . \"\\n\";\n</code></pre>\n","markdown":"\n## Write a program to find the sum of all numbers in an array\n\n```\nInput  : [1, 2, 3, 4, 5]\nOutput : 15\n```\n\n---\n\n<CodeBlock slug=\"find-the-sum-of-all-numbers-in-an-array\" >\n\n```java\nimport java.util.Scanner;\n\npublic class FindSumOfAllNumbers {\n    public static void main(String[] args) {\n        int n, sum = 0;\n\n        Scanner sc = new Scanner(System.in);\n        System.out.println(\"Enter the size of array\");\n        n = sc.nextInt();\n\n        System.out.println(\"Enter the array elements\");\n        int[] arr = new int[n];\n        for (int i = 0; i < arr.length; i++) {\n            arr[i] = sc.nextInt();\n        }\n\n        for (int i = 0; i < arr.length; i++) {\n            sum += arr[i];\n        }\n        System.out.println(\"Sum of all numbers in an array = \" + sum);\n    }\n}\n```\n\n```js\n/**\n * Return sum of all the numbers in array\n * @param {Array} arr Array of numbers\n * @returns {number} sum of array\n */\nconst getArraySum = (arr) => {\n  if (!Array.isArray(arr)) throw \"Parameter should be typeof an Array\";\n  return arr.reduce((acc, e, i) => {\n    if (typeof e !== \"number\")\n      throw `Element${e} at Index ${i}: is not an number`;\n    return e + acc;\n  }, 0);\n};\n\ntry {\n  console.log(getArraySum([1, 2, 3, 4, 5]));\n} catch (e) {\n  console.log(e);\n}\ntry {\n  console.log(getArraySum([1, 2, 3, \"a\", 5]));\n} catch (e) {\n  console.log(e);\n}\ntry {\n  console.log(getArraySum(0));\n} catch (e) {\n  console.log(e);\n}\n```\n\n```kt\n// #1 - using built-in function\nfun findTheSumOfAllNumbersInAnArray1(numbers: Array<Int>): Int = numbers.sum()\n\n// #2 - using looping\nfun findTheSumOfAllNumbersInAnArray2(numbers: Array<Int>): Int {\n\tvar total = 0\n\t\n\tfor (number in numbers) {\n\t\ttotal += number\n\t}\n\t\n\treturn total\n}\n\nfun main() {\n\tval inputs = arrayOf<Int>(1, 2, 3, 4, 5)\n\t// println(findTheSumOfAllNumbersInAnArray1(inputs))\n\tprintln(findTheSumOfAllNumbersInAnArray2(inputs))\n}\n```\n\n```ts\nfunction findSumOfAllNumbersInAnArray(...args: Array<number>) {\n    let numbers = [...args]\n    let sum = 0\n    for (let x of numbers) {\n        sum = sum + x\n    }\n\n    return sum\n}\n```\n\n```py\nprint(\n    \"Sum of all numbers:\",\n    sum([int(input()) for _ in range(int(input(\"How many numbers: \")))]),\n)\n```\n\n```go\npackage main\nimport \"fmt\"\n\nfunc main()  {\n\tarray := []int{1,2,3,4,5}\n\tfmt.Println(SumOfArray(array))\n}\n\nfunc SumOfArray(array []int) int {\n\tsum := 0\n\tfor i := 0; i < len(array); i++ {\n\t\tsum += array[i]\n\t}\n\treturn sum\n}\n```\n\n```php\n<?php\n\n$array = readline(\"Enter the array elements separated by space: \");\n\n$array = explode(\" \", $array);\n$result = 0;\nforeach ($array as $v) {\n    $result += $v;\n}\necho \"Sum of all elements of the array: \" ,$result . \"\\n\";\n```\n\n</CodeBlock>\n\n","latestUpdateDate":"2022-11-25T05:16:26Z"}