{"slug":"find-power-of-a-number","title":"Find power of a number","trackId":5098,"tags":["Java","JavaScript","TypeScript"],"contributors":["anandfresh","mail2poonam89","harshraj8843"],"contentHtml":"<h2>Write a program to find power of a number</h2>\n<p>Power of a number is the result of multiplying a number by itself a certain number of times. For example, 2^3 = 2 * 2 * 2 = 8. The number 2 is the base and 3 is the exponent.</p>\n<pre><code>Input  : 2 3\r\nOutput : 8\n</code></pre>\n<hr>\n<pre><code>import java.util.Scanner;\n\nclass FindPowerOfANumber {\n    public static void main(String[] args) {\n\n        Scanner scanner = new Scanner(System.in);\n        System.out.print(\"Enter the number: \");\n        int number = scanner.nextInt();\n        System.out.print(\"Enter the power: \");\n        int power = scanner.nextInt();\n\n        if(power &#x3C; 0 || number &#x3C; 0){\n            System.out.println(\"Invalid input/Power can't be negative\");\n        } else {\n\n            System.out.println(number + \"^\" + power + \" = \" + findPower(number, power));\n        }\n    }\n\n    private static long findPower(int number, int power) {\n        if(power == 0){\n            return 1;\n        } else {\n            return (long) Math.pow(number, power);\n        }\n    }\n}\n</code></pre>\n<pre><code>const powerOfNumber = (num, power) => {\n  return Math.pow(num, power);\n}\n\nconsole.log(powerOfNumber(2, 3))\n</code></pre>\n<pre><code>const powerOfNumber = (num: number, power: number) : number => {\n  return Math.pow(num, power);\n}\n\nconsole.log(powerOfNumber(2, 3))\n</code></pre>\n","markdown":"\n## Write a program to find power of a number\n\nPower of a number is the result of multiplying a number by itself a certain number of times. For example, 2^3 = 2 * 2 * 2 = 8. The number 2 is the base and 3 is the exponent.\r\n\r\n```\r\nInput  : 2 3\r\nOutput : 8\r\n```\n\n---\n\n<CodeBlock slug=\"find-power-of-a-number\" >\n\n```java\nimport java.util.Scanner;\n\nclass FindPowerOfANumber {\n    public static void main(String[] args) {\n\n        Scanner scanner = new Scanner(System.in);\n        System.out.print(\"Enter the number: \");\n        int number = scanner.nextInt();\n        System.out.print(\"Enter the power: \");\n        int power = scanner.nextInt();\n\n        if(power < 0 || number < 0){\n            System.out.println(\"Invalid input/Power can't be negative\");\n        } else {\n\n            System.out.println(number + \"^\" + power + \" = \" + findPower(number, power));\n        }\n    }\n\n    private static long findPower(int number, int power) {\n        if(power == 0){\n            return 1;\n        } else {\n            return (long) Math.pow(number, power);\n        }\n    }\n}\n```\n\n```js\nconst powerOfNumber = (num, power) => {\n  return Math.pow(num, power);\n}\n\nconsole.log(powerOfNumber(2, 3))\n```\n\n```ts\nconst powerOfNumber = (num: number, power: number) : number => {\n  return Math.pow(num, power);\n}\n\nconsole.log(powerOfNumber(2, 3))\n```\n\n</CodeBlock>\n\n","latestUpdateDate":"2023-01-02T18:09:26Z"}