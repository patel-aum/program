{"slug":"calculate-the-combination-of-n-objects-taken-r-at-a-time","title":"Calculate the combination of n objects taken r at a time","trackId":2659,"tags":["C","C++","Java","JavaScript","TypeScript","Python","GO"],"contributors":["joao-vitor-souza","harshraj8843","Larryking007","kshitijv256","PoweredByCaffein","grraghav120"],"contentHtml":"<h2>Write a program to calculate the combination of n objects taken r at a time</h2>\n<p>Combination is a selection of objects from a group such that (unlike permutations) the order of selection does not matter. The number of combinations on n objects taken r at a time is given by the formula n!/(r!(n-r)!) = n(n-1)(n-2)...(n-r+1)/r!</p>\n<pre><code>Input  : 5, 2\nOutput : 10\n</code></pre>\n<hr>\n<pre><code>#include&#x3C;stdio.h>\n\nint factorial(int n)\n{\n    if(n==0)\n        return 1;\n    else\n        return n*factorial(n-1);\n}\n\nint main()\n{\n    int n = 5;\n    int r = 2;\n    int nCr=factorial(n)/(factorial(r)*factorial(n-r));\n    printf(\"%d\",nCr);\n    return 0;\n}\n</code></pre>\n<pre><code>#include &#x3C;iostream>\n\nusing namespace std;\n\nint fact(int n){\n    int f=1;\n    for(int i=1;i&#x3C;=n;i++) f*=i;\n    return f;\n}\n\nint main()\n{\n    int n,r;\n    cin>>n>>r;\n    int ans=(fact(n)/(fact(r)*fact(n-r)));\n    cout&#x3C;&#x3C;ans&#x3C;&#x3C;'\\n';\n    return 0;\n}\n\n// Contributed by Raghav Garg @grraghav120\n</code></pre>\n<pre><code>class CalculateTheCombinationOfNObjectsTakenRAtATime {\n    public static void main(String[] args) {\n        int n = 5;\n        int r = 2;\n        int nCr = factorial(n) / (factorial(r) * factorial(n - r));\n        System.out.println(nCr);\n    }\n\n    public static int factorial(int n) {\n        int fact = 1;\n        for (int i = 1; i &#x3C;= n; i++) {\n            fact *= i;\n        }\n        return fact;\n    }\n}\n</code></pre>\n<pre><code>// JavaScript program to calculate the combination of n objects taken r at a time\n// n!/(r!(n-r)!) = n(n-1)(n-2)...(n-r+1)/r!\n\nfunction range(a, b) {\n    var total = a,i = a;\n \n  while (i++&#x3C; b) {\n    total*=i;\n  }\n    return total;\n}\n\nfunction combination(n, r) {\n    if (n==r || r==0) \n    {\n      return 1;\n    }\n    else {\n        r=(r &#x3C; n-r) ? n-r : r;\n        return range(r+1, n)/range(1, n-r)\n    }\n}\n\nconsole.log(combination(5, 2));\n</code></pre>\n<pre><code>// JavaScript program to calculate the combination of n objects taken r at a time\n// n!/(r!(n-r)!) = n(n-1)(n-2)...(n-r+1)/r!\n\nfunction rng(a: number, b: number): number {\n    var total = a,i = a;\n \n  while (i++&#x3C; b) {\n    total*=i;\n  }\n    return total;\n}\n\nfunction cbn(n: number, r: number): number {\n    if (n==r || r==0) \n    {\n      return 1;\n    }\n    else {\n        r=(r &#x3C; n-r) ? n-r : r;\n        return rng(r+1, n)/rng(1, n-r)\n    }\n}\n\nconsole.log(cbn(5, 2));\n</code></pre>\n<pre><code>def nCr(n, r):\n    return factorial(n) / (factorial(r) * factorial(n - r))\n\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\n\nn = 5\nr = 2\nprint(int(nCr(n, r)))\n</code></pre>\n<pre><code>package main\n\nimport \"fmt\"\n\nfunc main() {\n\tvar n, r int\n\tfmt.Printf(\"Enter the value of n and r separated by space:\\t\")\n\tfmt.Scanf(\"%d %d\", &#x26;n, &#x26;r)\n\tfmt.Println(\"Input:\\t\", n, r)\n\n\t\n\tfmt.Println(\"Output:\\t\", calculateFactorial(n)/(calculateFactorial(r)*calculateFactorial(n-r)))\n}\n\nfunc calculateFactorial(n int) int {\n\tresult := 1\n\tfor n > 0 {\n\t\tresult *= n\n\t\tn--\n\t}\n\n\treturn result\n}\n</code></pre>\n","markdown":"\n## Write a program to calculate the combination of n objects taken r at a time\n\nCombination is a selection of objects from a group such that (unlike permutations) the order of selection does not matter. The number of combinations on n objects taken r at a time is given by the formula n!/(r!(n-r)!) = n(n-1)(n-2)...(n-r+1)/r!\n\n```\nInput  : 5, 2\nOutput : 10\n```\n\n---\n\n<CodeBlock slug=\"calculate-the-combination-of-n-objects-taken-r-at-a-time\" >\n\n```c\n#include<stdio.h>\n\nint factorial(int n)\n{\n    if(n==0)\n        return 1;\n    else\n        return n*factorial(n-1);\n}\n\nint main()\n{\n    int n = 5;\n    int r = 2;\n    int nCr=factorial(n)/(factorial(r)*factorial(n-r));\n    printf(\"%d\",nCr);\n    return 0;\n}\n```\n\n```cpp\n#include <iostream>\n\nusing namespace std;\n\nint fact(int n){\n    int f=1;\n    for(int i=1;i<=n;i++) f*=i;\n    return f;\n}\n\nint main()\n{\n    int n,r;\n    cin>>n>>r;\n    int ans=(fact(n)/(fact(r)*fact(n-r)));\n    cout<<ans<<'\\n';\n    return 0;\n}\n\n// Contributed by Raghav Garg @grraghav120\n```\n\n```java\nclass CalculateTheCombinationOfNObjectsTakenRAtATime {\n    public static void main(String[] args) {\n        int n = 5;\n        int r = 2;\n        int nCr = factorial(n) / (factorial(r) * factorial(n - r));\n        System.out.println(nCr);\n    }\n\n    public static int factorial(int n) {\n        int fact = 1;\n        for (int i = 1; i <= n; i++) {\n            fact *= i;\n        }\n        return fact;\n    }\n}\n```\n\n```js\n// JavaScript program to calculate the combination of n objects taken r at a time\n// n!/(r!(n-r)!) = n(n-1)(n-2)...(n-r+1)/r!\n\nfunction range(a, b) {\n    var total = a,i = a;\n \n  while (i++< b) {\n    total*=i;\n  }\n    return total;\n}\n\nfunction combination(n, r) {\n    if (n==r || r==0) \n    {\n      return 1;\n    }\n    else {\n        r=(r < n-r) ? n-r : r;\n        return range(r+1, n)/range(1, n-r)\n    }\n}\n\nconsole.log(combination(5, 2));\n```\n\n```ts\n// JavaScript program to calculate the combination of n objects taken r at a time\n// n!/(r!(n-r)!) = n(n-1)(n-2)...(n-r+1)/r!\n\nfunction rng(a: number, b: number): number {\n    var total = a,i = a;\n \n  while (i++< b) {\n    total*=i;\n  }\n    return total;\n}\n\nfunction cbn(n: number, r: number): number {\n    if (n==r || r==0) \n    {\n      return 1;\n    }\n    else {\n        r=(r < n-r) ? n-r : r;\n        return rng(r+1, n)/rng(1, n-r)\n    }\n}\n\nconsole.log(cbn(5, 2));\n```\n\n```py\ndef nCr(n, r):\n    return factorial(n) / (factorial(r) * factorial(n - r))\n\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\n\nn = 5\nr = 2\nprint(int(nCr(n, r)))\n```\n\n```go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\tvar n, r int\n\tfmt.Printf(\"Enter the value of n and r separated by space:\\t\")\n\tfmt.Scanf(\"%d %d\", &n, &r)\n\tfmt.Println(\"Input:\\t\", n, r)\n\n\t\n\tfmt.Println(\"Output:\\t\", calculateFactorial(n)/(calculateFactorial(r)*calculateFactorial(n-r)))\n}\n\nfunc calculateFactorial(n int) int {\n\tresult := 1\n\tfor n > 0 {\n\t\tresult *= n\n\t\tn--\n\t}\n\n\treturn result\n}\n```\n\n</CodeBlock>\n\n","latestUpdateDate":"2022-12-02T06:03:31Z"}