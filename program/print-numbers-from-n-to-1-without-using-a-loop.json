{"slug":"print-numbers-from-n-to-1-without-using-a-loop","title":"Print numbers from n to 1 without using a loop","trackId":4427,"tags":["C++","Java","JavaScript","Kotlin","TypeScript","Python","GO","PHP"],"contributors":["harshraj8843","dineshlalam15","anandfresh","joao-vitor-souza","KacperTKI","sureshsgith","kevenleone","mrajen27","Medmly20208"],"contentHtml":"<h2>Write a program to print numbers from n to 1 without using a loop</h2>\n<pre><code>Input  : 5\nOutput : 5 4 3 2 1\n</code></pre>\n<hr>\n<pre><code>// Write a program, that prints numbers from n to 1 without using a loop\n#include &#x3C;iostream>\n\n// Instead of using a loop, this function just prints the current number and\n// calls itself again with the number - 1(Recursion).\nvoid PrintNum(int);\n\nint main()\n{\n    std::cout &#x3C;&#x3C; \"Enter a num: \";\n    int n;\n    std::cin >> n;\n\n    PrintNum(n);\n    return 0;\n}\n\nvoid PrintNum(int n)\n{\n    // base case\n    if (n > 0)\n    {\n        std::cout &#x3C;&#x3C; n &#x3C;&#x3C; \" \";\n        PrintNum(n - 1);\n    }\n    else\n        std::cout &#x3C;&#x3C; std::endl;\n\n    return;\n}\n</code></pre>\n<pre><code>public class PrintNumbersFromNTo1WithoutUsingALoop {\n    public static void main(String[] args) {\n        print1ToN(5);\n    }\n    public static void print1ToN(int n){\n        if(n == 1){\n            System.out.print(n + \" \");\n            return;\n        }\n        print1ToN(n - 1);\n        System.out.print(n + \" \");\n    }\n}\n</code></pre>\n<pre><code>const minNumber = 1;\n\nfunction decreaseNumberWithoutLoop(number) {\n  console.log(number);\n\n  if (number > minNumber) {\n    decreaseNumberWithoutLoop(number - 1);\n  }\n}\n\ndecreaseNumberWithoutLoop(5);\n</code></pre>\n<pre><code>import java.util.Scanner\nfun main() {\n    val scanner = Scanner(System.`in`)\n    print(\"Enter the number::\")\n    val number = scanner.nextInt();\n    printNos(number);\n}\n\nfun printNos(n:Int) {\n    if(n > 0) {\n        val number = n.toString() + ' '\n        print(number)\n        printNos(n - 1);\n    }\n}\n</code></pre>\n<pre><code>const minNumber = 1;\n\nfunction decreaseNumberWithoutLoop(number: number) {\n  console.log(number);\n\n  if (number > minNumber) {\n    decreaseNumberWithoutLoop(number - 1);\n  }\n}\n\ndecreaseNumberWithoutLoop(5);\n</code></pre>\n<pre><code>def printNumbersFromNtoOneWithoutUsingALoop(number: int) -> None:\n    \"\"\"\n    print Numbers From N to 1 Without Using a Loop\n    Arguments:\n        number:int\n    Returns:\n        None\n    \"\"\"\n\n    if number == 0:\n        return\n\n    print(number, end=\" \")\n    printNumbersFromNtoOneWithoutUsingALoop(number - 1)\n\n\nif __name__ == \"__main__\":\n    number = int(input(\"Type A number : \"))\n    printNumbersFromNtoOneWithoutUsingALoop(number)\n\n\n# contributed by MedMly20208 Mohamed Moulay\n</code></pre>\n<pre><code>package main\n\nimport (\n\t\"fmt\"\n)\n\nfunc main() {\n\tfmt.Printf(\"Enter a Number:\")\n\tvar n int\n\tfmt.Scanf(\"%d\", &#x26;n)\n\tans(n)\n\tfmt.Print(\"\\n\")\n}\nfunc ans(n int) {\n\t//without loop\n\t//using recursion\n\tif n &#x3C; 1 {\n\t\treturn\n\t}\n\tfmt.Printf(\"%d \", n)\n\tans(n - 1)\n}\n</code></pre>\n<pre><code>&#x3C;?php \nfunction printNum($n) {\n  echo implode(' ',range($n, 1)); \n}\n\nprintNum(5);\n?>\n</code></pre>\n","markdown":"\n## Write a program to print numbers from n to 1 without using a loop\n\n```\nInput  : 5\nOutput : 5 4 3 2 1\n```\n\n---\n\n<CodeBlock slug=\"print-numbers-from-n-to-1-without-using-a-loop\" >\n\n```cpp\n// Write a program, that prints numbers from n to 1 without using a loop\n#include <iostream>\n\n// Instead of using a loop, this function just prints the current number and\n// calls itself again with the number - 1(Recursion).\nvoid PrintNum(int);\n\nint main()\n{\n    std::cout << \"Enter a num: \";\n    int n;\n    std::cin >> n;\n\n    PrintNum(n);\n    return 0;\n}\n\nvoid PrintNum(int n)\n{\n    // base case\n    if (n > 0)\n    {\n        std::cout << n << \" \";\n        PrintNum(n - 1);\n    }\n    else\n        std::cout << std::endl;\n\n    return;\n}\n```\n\n```java\npublic class PrintNumbersFromNTo1WithoutUsingALoop {\n    public static void main(String[] args) {\n        print1ToN(5);\n    }\n    public static void print1ToN(int n){\n        if(n == 1){\n            System.out.print(n + \" \");\n            return;\n        }\n        print1ToN(n - 1);\n        System.out.print(n + \" \");\n    }\n}\n```\n\n```js\nconst minNumber = 1;\n\nfunction decreaseNumberWithoutLoop(number) {\n  console.log(number);\n\n  if (number > minNumber) {\n    decreaseNumberWithoutLoop(number - 1);\n  }\n}\n\ndecreaseNumberWithoutLoop(5);\n```\n\n```kt\nimport java.util.Scanner\nfun main() {\n    val scanner = Scanner(System.`in`)\n    print(\"Enter the number::\")\n    val number = scanner.nextInt();\n    printNos(number);\n}\n\nfun printNos(n:Int) {\n    if(n > 0) {\n        val number = n.toString() + ' '\n        print(number)\n        printNos(n - 1);\n    }\n}\n```\n\n```ts\nconst minNumber = 1;\n\nfunction decreaseNumberWithoutLoop(number: number) {\n  console.log(number);\n\n  if (number > minNumber) {\n    decreaseNumberWithoutLoop(number - 1);\n  }\n}\n\ndecreaseNumberWithoutLoop(5);\n```\n\n```py\ndef printNumbersFromNtoOneWithoutUsingALoop(number: int) -> None:\n    \"\"\"\n    print Numbers From N to 1 Without Using a Loop\n    Arguments:\n        number:int\n    Returns:\n        None\n    \"\"\"\n\n    if number == 0:\n        return\n\n    print(number, end=\" \")\n    printNumbersFromNtoOneWithoutUsingALoop(number - 1)\n\n\nif __name__ == \"__main__\":\n    number = int(input(\"Type A number : \"))\n    printNumbersFromNtoOneWithoutUsingALoop(number)\n\n\n# contributed by MedMly20208 Mohamed Moulay\n```\n\n```go\npackage main\n\nimport (\n\t\"fmt\"\n)\n\nfunc main() {\n\tfmt.Printf(\"Enter a Number:\")\n\tvar n int\n\tfmt.Scanf(\"%d\", &n)\n\tans(n)\n\tfmt.Print(\"\\n\")\n}\nfunc ans(n int) {\n\t//without loop\n\t//using recursion\n\tif n < 1 {\n\t\treturn\n\t}\n\tfmt.Printf(\"%d \", n)\n\tans(n - 1)\n}\n```\n\n```php\n<?php \nfunction printNum($n) {\n  echo implode(' ',range($n, 1)); \n}\n\nprintNum(5);\n?>\n```\n\n</CodeBlock>\n\n","latestUpdateDate":"2022-12-25T13:17:11Z"}