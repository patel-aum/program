{"slug":"split-string-into-array-of-characters","title":"Split string into array of characters","trackId":2535,"tags":["C","C++","Java","JavaScript","Ruby","TypeScript","Python","GO","Haskell"],"contributors":["anafvana","joao-vitor-souza","harshraj8843","mhdsabah","PravunathSingh","gdguesser","PraaneshSelvaraj","Vignesh-dev07","Greeshma-frontier","Sivam2313"],"contentHtml":"<h2>Write a program to split string into array of characters</h2>\n<pre><code>Input  : \"hello world\"\nOutput : [\"h\", \"e\", \"l\", \"l\", \"o\", \" \", \"w\", \"o\", \"r\", \"l\", \"d\"]\n</code></pre>\n<hr>\n<pre><code>#include &#x3C;stdio.h>\n#include &#x3C;string.h>\n#include &#x3C;stdlib.h>\n#include &#x3C;assert.h>\n\nint main()\n{\n  size_t arrayLength = 0, allocatedSize = 8;\n  int *array = malloc(sizeof(*array) * allocatedSize);\n  char str[1024];\n  fgets(str, 1024, stdin);\n  for (int i = 0; i &#x3C; strlen(str); ++i)\n  {\n    if (arrayLength == allocatedSize)\n    {\n      array = realloc(array, allocatedSize *= 2);\n      assert(array);\n    }\n    assert(arrayLength &#x3C; allocatedSize);\n    array[arrayLength++] = str[i];\n  }\n  printf(\"[\");\n  for (int i = 0; i &#x3C; arrayLength; ++i)\n  {\n    printf(\"'\");\n    printf(\"%c \", array[i]);\n    printf(\"', \");\n  }\n  printf(\"]\");\n  free(array);\n  return 0;\n}\n</code></pre>\n<pre><code>#include &#x3C;bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    string s;\n    getline(cin, s);\n    char arr[s.size()];\n\n    for (int i = 0; i &#x3C; s.size(); i++)\n    {\n        arr[i] = s[i];\n    }\n\n    for (int i = 0; i &#x3C; s.size(); i++)\n    {\n        cout &#x3C;&#x3C; arr[i] &#x3C;&#x3C; \" \";\n    }\n}\n</code></pre>\n<pre><code>import java.util.*;\n\n\nclass SplitStringintoArrayofCharacters{\n\tpublic static void main(String[] args){\n\n\t\tScanner sc = new Scanner(System.in);\n\t\tString s;\n\t\tSystem.out.print(\"Input : \");\n\n\t\ts = sc.nextLine();\n\t\tint n = s.length();\n\t\tchar[] arr = new char[n];\n\t\tfor (int i=0;i&#x3C;n;i++){\n\t\t\tarr[i] = s.charAt(i);\n\t\t\t\n\t\t}\n\n\t\tSystem.out.print(\"\\nOutput : [\");\n\t\tfor (int i=0;i&#x3C;n;i++){\n\t\t\tSystem.out.print('\"'+\"\"+arr[i]+\"\"+'\"');\n\t\t\tif (i!= n-1) System.out.print(\", \");\n\t\t}\n\t\tSystem.out.print(\"]\\n\");\n\t}\n\n}\n</code></pre>\n<pre><code>function splitStringIntoArrayOfCharacters(str) {\n\n    // Method 1\n    let charArray = str.split('');\n    console.log(charArray);\n    \n    \n    // Method 2\n    let charArray = [];\n    for (let i = 0; i &#x3C; str.length; i++) {\n        charArray.push(str[i]);\n    }\n    console.log(charArray);\n}\n\nsplitStringIntoArrayOfCharacters(\"Hello World\")\n</code></pre>\n<pre><code>str = gets.chomp\narr = str.split(\"\")\nprint arr\n</code></pre>\n<pre><code>function splitStringIntoArrayOfCharacters(str: string) {\n\n    // Method 1\n    let charArray = str.split('');\n    console.log(charArray);\n    \n    \n    // Method 2\n    let charArray = [];\n    for (let i = 0; i &#x3C; str.length; i++) {\n        charArray.push(str[i]);\n    }\n    console.log(charArray);\n}\n\nsplitStringIntoArrayOfCharacters(\"Hello World\")\n</code></pre>\n<pre><code># input string\nstring = input(\"Input :\")\nif string.startswith('\"'):\n    print(\"Output :\", list(string[1:-1]))\nelse:\n    print(\"Output :\", list(string))\n</code></pre>\n<pre><code>package main\n\nimport \"fmt\"\n\nfunc splitStringIntoArray(str string) {\n\tvar arr []string\n\tfor _, v := range str {\n\t\tarr = append(arr, string(v))\n\t}\n\tfmt.Printf(\"%+q\", arr)\n}\n\nfunc main() {\n\tstr := \"hello world\"\n\tsplitStringIntoArray(str)\n}\n</code></pre>\n<pre><code>-- String is aliased to [Char], thus no operation is needed to split a string into an array of chars\n\n-- However, the expected output is [\"h\", \"e\", \"l\", \"l\", \"o\", \" \", \"w\", \"o\", \"r\", \"l\", \"d\"]. \n-- Double quotes would indicate this is an array of strings. This operation can be performed as follows:\n\n-- String into array of single-character strings\nmodule Main where\n\ncharacters :: [Char] -> [[Char]]\ncharacters [] = []\ncharacters (x:xs)\n    | null xs = [[x]]\n    | otherwise = [x]:characters xs\n\nmain :: IO ()\nmain = do\n  let result = characters \"Hii there\"\n  print result\n</code></pre>\n","markdown":"\n## Write a program to split string into array of characters\n\n```\nInput  : \"hello world\"\nOutput : [\"h\", \"e\", \"l\", \"l\", \"o\", \" \", \"w\", \"o\", \"r\", \"l\", \"d\"]\n```\n\n---\n\n<CodeBlock slug=\"split-string-into-array-of-characters\" >\n\n```c\n#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <assert.h>\n\nint main()\n{\n  size_t arrayLength = 0, allocatedSize = 8;\n  int *array = malloc(sizeof(*array) * allocatedSize);\n  char str[1024];\n  fgets(str, 1024, stdin);\n  for (int i = 0; i < strlen(str); ++i)\n  {\n    if (arrayLength == allocatedSize)\n    {\n      array = realloc(array, allocatedSize *= 2);\n      assert(array);\n    }\n    assert(arrayLength < allocatedSize);\n    array[arrayLength++] = str[i];\n  }\n  printf(\"[\");\n  for (int i = 0; i < arrayLength; ++i)\n  {\n    printf(\"'\");\n    printf(\"%c \", array[i]);\n    printf(\"', \");\n  }\n  printf(\"]\");\n  free(array);\n  return 0;\n}\n```\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    string s;\n    getline(cin, s);\n    char arr[s.size()];\n\n    for (int i = 0; i < s.size(); i++)\n    {\n        arr[i] = s[i];\n    }\n\n    for (int i = 0; i < s.size(); i++)\n    {\n        cout << arr[i] << \" \";\n    }\n}\n```\n\n```java\nimport java.util.*;\n\n\nclass SplitStringintoArrayofCharacters{\n\tpublic static void main(String[] args){\n\n\t\tScanner sc = new Scanner(System.in);\n\t\tString s;\n\t\tSystem.out.print(\"Input : \");\n\n\t\ts = sc.nextLine();\n\t\tint n = s.length();\n\t\tchar[] arr = new char[n];\n\t\tfor (int i=0;i<n;i++){\n\t\t\tarr[i] = s.charAt(i);\n\t\t\t\n\t\t}\n\n\t\tSystem.out.print(\"\\nOutput : [\");\n\t\tfor (int i=0;i<n;i++){\n\t\t\tSystem.out.print('\"'+\"\"+arr[i]+\"\"+'\"');\n\t\t\tif (i!= n-1) System.out.print(\", \");\n\t\t}\n\t\tSystem.out.print(\"]\\n\");\n\t}\n\n}\n```\n\n```js\nfunction splitStringIntoArrayOfCharacters(str) {\n\n    // Method 1\n    let charArray = str.split('');\n    console.log(charArray);\n    \n    \n    // Method 2\n    let charArray = [];\n    for (let i = 0; i < str.length; i++) {\n        charArray.push(str[i]);\n    }\n    console.log(charArray);\n}\n\nsplitStringIntoArrayOfCharacters(\"Hello World\")\n```\n\n```rb\nstr = gets.chomp\narr = str.split(\"\")\nprint arr\n```\n\n```ts\nfunction splitStringIntoArrayOfCharacters(str: string) {\n\n    // Method 1\n    let charArray = str.split('');\n    console.log(charArray);\n    \n    \n    // Method 2\n    let charArray = [];\n    for (let i = 0; i < str.length; i++) {\n        charArray.push(str[i]);\n    }\n    console.log(charArray);\n}\n\nsplitStringIntoArrayOfCharacters(\"Hello World\")\n```\n\n```py\n# input string\nstring = input(\"Input :\")\nif string.startswith('\"'):\n    print(\"Output :\", list(string[1:-1]))\nelse:\n    print(\"Output :\", list(string))\n```\n\n```go\npackage main\n\nimport \"fmt\"\n\nfunc splitStringIntoArray(str string) {\n\tvar arr []string\n\tfor _, v := range str {\n\t\tarr = append(arr, string(v))\n\t}\n\tfmt.Printf(\"%+q\", arr)\n}\n\nfunc main() {\n\tstr := \"hello world\"\n\tsplitStringIntoArray(str)\n}\n```\n\n```hs\n-- String is aliased to [Char], thus no operation is needed to split a string into an array of chars\n\n-- However, the expected output is [\"h\", \"e\", \"l\", \"l\", \"o\", \" \", \"w\", \"o\", \"r\", \"l\", \"d\"]. \n-- Double quotes would indicate this is an array of strings. This operation can be performed as follows:\n\n-- String into array of single-character strings\nmodule Main where\n\ncharacters :: [Char] -> [[Char]]\ncharacters [] = []\ncharacters (x:xs)\n    | null xs = [[x]]\n    | otherwise = [x]:characters xs\n\nmain :: IO ()\nmain = do\n  let result = characters \"Hii there\"\n  print result\n```\n\n</CodeBlock>\n\n","latestUpdateDate":"2022-12-17T15:39:37Z"}