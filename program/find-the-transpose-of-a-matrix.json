{"slug":"find-the-transpose-of-a-matrix","title":"Find the transpose of a matrix","trackId":3142,"tags":["Java","JavaScript","Kotlin","TypeScript","Python"],"contributors":["lukastomcisak","anshu-6537","Greeshma-frontier","harshraj8843"],"contentHtml":"<h2>Write a program to find the transpose of a matrix</h2>\n<p>The transpose of a matrix is an operator which flips a matrix over its diagonal, that is it switches the row and column indices of the matrix by producing another matrix denoted as AT.</p>\n<pre><code>Input  :\n1 2 3\n4 5 6\n7 8 9\n\nOutput :\n1 4 7\n2 5 8\n3 6 9\n</code></pre>\n<hr>\n<pre><code>class FindTheTransposeOfAMatrix {\n    public static void main(String[] args) {\n        int matrix[][] = { { 1, 2, 3 }, { 4, 5, 6 }, { 7, 8, 9 } };\n        int size = matrix.length;\n\n        for (int i = 0; i &#x3C; size; i++)\n            for (int j = i + 1; j &#x3C; size; j++) {\n                int help = matrix[i][j];\n                matrix[i][j] = matrix[j][i];\n                matrix[j][i] = help;\n            }\n\n        for (int i = 0; i &#x3C; size; i++) {\n            for (int j = 0; j &#x3C; size; j++)\n                System.out.print(matrix[i][j] + \" \");\n            System.out.println(\"\");\n        }\n    }\n}\n</code></pre>\n<pre><code>function transposeOfMatrix(arr) {\n    console.log(\"before arr\", arr);\n    for (let i = 0; i &#x3C; arr.length; i++) {\n        for (let j = 0; j &#x3C; i; j++) {\n            let tmp = arr[i][j];\n            arr[i][j] = arr[j][i];\n            arr[j][i] = tmp;\n        }\n    }\n\n    console.log(\"after arr\", arr);\n}\n\ntransposeOfMatrix([[1, 2, 3], [4, 5, 6], [7, 8, 9]]);\n</code></pre>\n<pre><code>fun main(args: Array&#x3C;String>) {\n    val row = 2\n    val column = 3\n    val matrix = arrayOf(intArrayOf(2, 3, 4), intArrayOf(5, 6, 4))\n\n    \n    display(matrix)\n\n    // Transpose the matrix\n    val transpose = Array(column) { IntArray(row) }\n    for (i in 0..row - 1) {\n        for (j in 0..column - 1) {\n            transpose[j][i] = matrix[i][j]\n        }\n    }\n\n    display(transpose)\n}\n\nfun display(matrix: Array&#x3C;IntArray>) {\n    println(\"The matrix is: \")\n    for (row in matrix) {\n        for (column in row) {\n            print(\"$column    \")\n        }\n        println()\n    }\n}\n</code></pre>\n<pre><code>function transposeOfMatrix(arr: Array&#x3C;Array&#x3C;number>>) {\n    console.log(\"before arr\", arr);\n    for (let i = 0; i &#x3C; arr.length; i++) {\n        for (let j = 0; j &#x3C; i; j++) {\n            let tmp = arr[i][j];\n            arr[i][j] = arr[j][i];\n            arr[j][i] = tmp;\n        }\n    }\n\n    console.log(\"after arr\", arr);\n}\n\ntransposeOfMatrix([[1, 2, 3], [4, 5, 6], [7, 8, 9]]);\n</code></pre>\n<pre><code>matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\n\nrows = len(matrix)\ncolumns = len(matrix[0])\n\ntransposed_matrix = [[0 for x in range(rows)] for y in range(columns)]\n\nfor i in range(columns):\n    for j in range(rows):\n        transposed_matrix[i][j] = matrix[j][i]\n\nfor i in range(columns):\n    for j in range(rows):\n        print(transposed_matrix[i][j], \" \", end=\"\")\n    print()\n</code></pre>\n","markdown":"\n## Write a program to find the transpose of a matrix\n\nThe transpose of a matrix is an operator which flips a matrix over its diagonal, that is it switches the row and column indices of the matrix by producing another matrix denoted as A<sup>T</sup>.\n\n```\nInput  :\n1 2 3\n4 5 6\n7 8 9\n\nOutput :\n1 4 7\n2 5 8\n3 6 9\n```\n\n---\n\n<CodeBlock slug=\"find-the-transpose-of-a-matrix\" >\n\n```java\nclass FindTheTransposeOfAMatrix {\n    public static void main(String[] args) {\n        int matrix[][] = { { 1, 2, 3 }, { 4, 5, 6 }, { 7, 8, 9 } };\n        int size = matrix.length;\n\n        for (int i = 0; i < size; i++)\n            for (int j = i + 1; j < size; j++) {\n                int help = matrix[i][j];\n                matrix[i][j] = matrix[j][i];\n                matrix[j][i] = help;\n            }\n\n        for (int i = 0; i < size; i++) {\n            for (int j = 0; j < size; j++)\n                System.out.print(matrix[i][j] + \" \");\n            System.out.println(\"\");\n        }\n    }\n}\n```\n\n```js\nfunction transposeOfMatrix(arr) {\n    console.log(\"before arr\", arr);\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = 0; j < i; j++) {\n            let tmp = arr[i][j];\n            arr[i][j] = arr[j][i];\n            arr[j][i] = tmp;\n        }\n    }\n\n    console.log(\"after arr\", arr);\n}\n\ntransposeOfMatrix([[1, 2, 3], [4, 5, 6], [7, 8, 9]]);\n```\n\n```kt\nfun main(args: Array<String>) {\n    val row = 2\n    val column = 3\n    val matrix = arrayOf(intArrayOf(2, 3, 4), intArrayOf(5, 6, 4))\n\n    \n    display(matrix)\n\n    // Transpose the matrix\n    val transpose = Array(column) { IntArray(row) }\n    for (i in 0..row - 1) {\n        for (j in 0..column - 1) {\n            transpose[j][i] = matrix[i][j]\n        }\n    }\n\n    display(transpose)\n}\n\nfun display(matrix: Array<IntArray>) {\n    println(\"The matrix is: \")\n    for (row in matrix) {\n        for (column in row) {\n            print(\"$column    \")\n        }\n        println()\n    }\n}\n```\n\n```ts\nfunction transposeOfMatrix(arr: Array<Array<number>>) {\n    console.log(\"before arr\", arr);\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = 0; j < i; j++) {\n            let tmp = arr[i][j];\n            arr[i][j] = arr[j][i];\n            arr[j][i] = tmp;\n        }\n    }\n\n    console.log(\"after arr\", arr);\n}\n\ntransposeOfMatrix([[1, 2, 3], [4, 5, 6], [7, 8, 9]]);\n```\n\n```py\nmatrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\n\nrows = len(matrix)\ncolumns = len(matrix[0])\n\ntransposed_matrix = [[0 for x in range(rows)] for y in range(columns)]\n\nfor i in range(columns):\n    for j in range(rows):\n        transposed_matrix[i][j] = matrix[j][i]\n\nfor i in range(columns):\n    for j in range(rows):\n        print(transposed_matrix[i][j], \" \", end=\"\")\n    print()\n```\n\n</CodeBlock>\n\n","latestUpdateDate":"2022-11-12T02:46:26Z"}