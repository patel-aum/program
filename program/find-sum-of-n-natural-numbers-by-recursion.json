{"slug":"find-sum-of-n-natural-numbers-by-recursion","title":"Find sum of n natural numbers by recursion","trackId":2822,"tags":["C","C++","Java","JavaScript","TypeScript","Python","GO","PHP","R","Rust"],"contributors":["joao-vitor-souza","harshraj8843","PravunathSingh","Greeshma-frontier","shivanshi-s","gdguesser","sksachin7z2"],"contentHtml":"<h2>Write a program to find sum of n natural numbers by recursion</h2>\n<pre><code>Input  : 5\r\nOutput : 15\n</code></pre>\n<hr>\n<pre><code>#include &#x3C;stdio.h>\n\nint sumByRecursion(int n);\n\nint main() {\n\n  int num;\n  printf(\"Enter a positive integer: \");\n  scanf(\"%d\", &#x26;num);\n  printf(\"Sum = %d\", sumByRecursion(num));\n  return 0;\n}\n\nint sumByRecursion(int n) {\n  if (n != 0)\n    return n + sumByRecursion(n - 1);\n  else\n    return n;\n}\n</code></pre>\n<pre><code>#include &#x3C;iostream>\nusing namespace std;\nint sum_of_natural_numbers(int n)\n{\nif(n == 0)\nreturn 0;\nreturn n + sum_of_natural_numbers(n - 1);\n}\n\nint main()\n{\nint n;\ncout &#x3C;&#x3C; \"\\nEnter the number : \";\ncin >> n;\ncout &#x3C;&#x3C; \"\\n Sum of \" &#x3C;&#x3C; n &#x3C;&#x3C; \" Natural Numbers is \"&#x3C;&#x3C; sum_of_natural_numbers(n);\ncout &#x3C;&#x3C; endl;\nreturn 0;\n}\n</code></pre>\n<pre><code>import java.util.*;\nimport java.lang.*;\n \nclass GFG\n{\n \n    public static int recurSum(int n)\n    {\n        if (n &#x3C;= 1)\n            return n;\n        return n + recurSum(n - 1);\n    }\n     \n    \n    public static void main(String args[])\n    {\n        int n = 5; //range of number \n        System.out.println(recurSum(n));\n    }\n}\n</code></pre>\n<pre><code>function sumOfNNaturalNumber(num) {\n    let sumOfNaturalNum = 0;\n    if(num > 0) {\n        sumOfNaturalNum = num + sumOfNNaturalNumber(num - 1);\n    }\n    return sumOfNaturalNum;\n}\n\nconsole.log(sumOfNNaturalNumber(7));\n</code></pre>\n<pre><code>function sumOfNNaturalNumber(num: number): number {\n    let sumOfNaturalNum = 0;\n    if(num > 0) {\n        sumOfNaturalNum = num + sumOfNNaturalNumber(num - 1);\n    }\n    return sumOfNaturalNum;\n}\n\nconsole.log(sumOfNNaturalNumber(5));\n</code></pre>\n<pre><code>def recursive_sum(n: int) -> int:\n    if n != 0:\n        return n + recursive_sum(n - 1)\n    return 0\n\n\nprint(recursive_sum(int(input())))\n</code></pre>\n<pre><code>package main\n\nfunc findSumOfNNaturalNumbersByRecursion(n int) int {\n\tif n == 0 {\n\t\treturn 0\n\t}\n\treturn n + findSumOfNNaturalNumbersByRecursion(n-1)\n}\n\nfunc main() {\n\tprintln(findSumOfNNaturalNumbersByRecursion(5))\n}\n</code></pre>\n<pre><code>&#x3C;!-- issue #2835 -->\n&#x3C;?php\nfunction Sum($n)\n{\nif ($n &#x3C;= 1)\nreturn $n;\nreturn $n + Sum ($n - 1 );\n}\n\n// enter the range in the sum function \necho Sum(5)\n?>\n</code></pre>\n<pre><code>sum&#x3C;-function(n){\n    if (n&#x3C;=1){\n        return(n)\n        }else{\n        return(n+sum(n-1))\n    }\n}\nsum(5)\n</code></pre>\n<pre><code>fn main() {\n    let n = 10;\n    let sum = sum_of_n_natural_numbers(n);\n    println!(\"Sum of first {} natural numbers is {}\", n, sum);\n}\n\nfn sum_of_n_natural_numbers(n: i32) -> i32 {\n    if n == 0 {\n        return 0;\n    }\n    return n + sum_of_n_natural_numbers(n - 1);\n}\n</code></pre>\n","markdown":"\n## Write a program to find sum of n natural numbers by recursion\n\n```\r\nInput  : 5\r\nOutput : 15\r\n```\n\n---\n\n<CodeBlock slug=\"find-sum-of-n-natural-numbers-by-recursion\" >\n\n```c\n#include <stdio.h>\n\nint sumByRecursion(int n);\n\nint main() {\n\n  int num;\n  printf(\"Enter a positive integer: \");\n  scanf(\"%d\", &num);\n  printf(\"Sum = %d\", sumByRecursion(num));\n  return 0;\n}\n\nint sumByRecursion(int n) {\n  if (n != 0)\n    return n + sumByRecursion(n - 1);\n  else\n    return n;\n}\n```\n\n```cpp\n#include <iostream>\nusing namespace std;\nint sum_of_natural_numbers(int n)\n{\nif(n == 0)\nreturn 0;\nreturn n + sum_of_natural_numbers(n - 1);\n}\n\nint main()\n{\nint n;\ncout << \"\\nEnter the number : \";\ncin >> n;\ncout << \"\\n Sum of \" << n << \" Natural Numbers is \"<< sum_of_natural_numbers(n);\ncout << endl;\nreturn 0;\n}\n```\n\n```java\nimport java.util.*;\nimport java.lang.*;\n \nclass GFG\n{\n \n    public static int recurSum(int n)\n    {\n        if (n <= 1)\n            return n;\n        return n + recurSum(n - 1);\n    }\n     \n    \n    public static void main(String args[])\n    {\n        int n = 5; //range of number \n        System.out.println(recurSum(n));\n    }\n}\n```\n\n```js\nfunction sumOfNNaturalNumber(num) {\n    let sumOfNaturalNum = 0;\n    if(num > 0) {\n        sumOfNaturalNum = num + sumOfNNaturalNumber(num - 1);\n    }\n    return sumOfNaturalNum;\n}\n\nconsole.log(sumOfNNaturalNumber(7));\n```\n\n```ts\nfunction sumOfNNaturalNumber(num: number): number {\n    let sumOfNaturalNum = 0;\n    if(num > 0) {\n        sumOfNaturalNum = num + sumOfNNaturalNumber(num - 1);\n    }\n    return sumOfNaturalNum;\n}\n\nconsole.log(sumOfNNaturalNumber(5));\n```\n\n```py\ndef recursive_sum(n: int) -> int:\n    if n != 0:\n        return n + recursive_sum(n - 1)\n    return 0\n\n\nprint(recursive_sum(int(input())))\n```\n\n```go\npackage main\n\nfunc findSumOfNNaturalNumbersByRecursion(n int) int {\n\tif n == 0 {\n\t\treturn 0\n\t}\n\treturn n + findSumOfNNaturalNumbersByRecursion(n-1)\n}\n\nfunc main() {\n\tprintln(findSumOfNNaturalNumbersByRecursion(5))\n}\n```\n\n```php\n<!-- issue #2835 -->\n<?php\nfunction Sum($n)\n{\nif ($n <= 1)\nreturn $n;\nreturn $n + Sum ($n - 1 );\n}\n\n// enter the range in the sum function \necho Sum(5)\n?>\n```\n\n```r\nsum<-function(n){\n    if (n<=1){\n        return(n)\n        }else{\n        return(n+sum(n-1))\n    }\n}\nsum(5)\n```\n\n```rs\nfn main() {\n    let n = 10;\n    let sum = sum_of_n_natural_numbers(n);\n    println!(\"Sum of first {} natural numbers is {}\", n, sum);\n}\n\nfn sum_of_n_natural_numbers(n: i32) -> i32 {\n    if n == 0 {\n        return 0;\n    }\n    return n + sum_of_n_natural_numbers(n - 1);\n}\n```\n\n</CodeBlock>\n\n","latestUpdateDate":"2022-12-02T06:03:31Z"}