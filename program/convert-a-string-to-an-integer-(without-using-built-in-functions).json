{"slug":"convert-a-string-to-an-integer-(without-using-built-in-functions)","title":"Convert a string to an integer (without using built-in functions)","trackId":2481,"tags":["JavaScript","TypeScript","Python","GO"],"contributors":["joao-vitor-souza","harshraj8843","smitioswal","ntoniocp","victoriacheng15","ahmedheltaher"],"contentHtml":"<h2>Write a program to convert a string to an integer (without using built-in functions)</h2>\n<pre><code>Input  : \"123\"\nOutput : 123\n</code></pre>\n<hr>\n<pre><code>function convertStringToInteger(str) {\n  let [isNegative, result, num] = [false, str, 0];\n\n  if (result[0] === '-') {\n    isNegative = true;\n    result = result.slice(1);\n  }\n\n  for (let i = 0; i &#x3C; result.length; i += 1) {\n    const charCode = result.charCodeAt(i) - 48;\n    const pow = 10 ** (result.length - i - 1);\n    num += charCode * pow;\n  }\n\n  return isNegative ? num * -1 : num;\n}\n\nconst str = '123';\nconsole.log(`Input: ${str}, type: ${typeof str}`);\nconsole.log(`Output: ${convertStringToInteger(str)}, type: ${typeof convertStringToInteger(str)}`);\n\nconst strWithNegative = '-123';\nconsole.log(`Input: ${strWithNegative}, type: ${typeof strWithNegative}`);\nconsole.log(`Output: ${convertStringToInteger(strWithNegative)}, type: ${typeof convertStringToInteger(strWithNegative)}`);\n</code></pre>\n<pre><code>/**\n * This function converts a string to an integer without using built-in functions with respect to the negative sign and the decimal point\n * @param {string} str - The string to be converted\n * @returns {number} - The converted integer\n * @example\n * convertStringToInteger(\"123\") // returns 123\n * convertStringToInteger(\"123.45\") // returns 123\n * \n * \n * @author [Ahmed Eltaher](https://github.com/ahmedheltaher)\n * \n */\nfunction convertStringToInteger(str: string): number {\n\tlet isNegative = false;\n\tif (str[0] === \"-\") {\n\t\tisNegative = true;\n\t\tstr = str.slice(1);\n\t}\n\tif (str.indexOf(\".\") !== -1) {\n\t\tstr = str.slice(0, str.indexOf(\".\"));\n\t}\n\n\t// Convert the string to an integer\n\tlet num = 0;\n\tfor (let i = 0; i &#x3C; str.length; i++) {\n\t\tnum += (str.charCodeAt(i) - 48) * Math.pow(10, str.length - i - 1);\n\t}\n\n\t// Handle negative numbers\n\treturn num * (isNegative ? -1 : 1);\n}\n</code></pre>\n<pre><code># -*- coding: utf-8 -*-\r\n\"\"\"\r\nCreated on Sun Oct  9 16:08:39 2022\r\n\r\n@author: smiti\r\n\"\"\"\r\n\r\n# Python3 program to convert a string to an integer (without using built-in functions)\r\n\r\n\r\ndef convert(s: str) -> int:  # function that will do the needful\r\n\r\n    num = 0  # Initialize an integer variable\r\n\r\n    # Iterate through all the characters of the string\r\n    for i in s:\r\n        # Subtract ascii value of 0 from the current digit\r\n        num = num * 10 + (ord(i) - ord(\"0\"))\r\n\r\n    return num  # return the ans\r\n\r\n\r\n# Take input:\r\nprint(convert(\"123\"))\n</code></pre>\n<pre><code>package main\n\nimport (\n\t\"fmt\"\n\t\"math\"\n\t\"reflect\"\n)\n\n// Returns the passed number string as int. If the provided string isn't right it returns -1\nfunc stringToInt(str string) int {\n\tvar finalInt int = 0\n\n\tfor i := len(str) - 1; i >= 0; i-- {\n\t\tif str[i] >= 48 &#x26;&#x26; str[i] &#x3C;= 57 {\n\t\t\tpower := float64(len(str) - i - 1)\n\t\t\tfinalInt += int(str[i]-48) * int(math.Pow(10, power))\n\t\t} else {\n\t\t\treturn -1\n\t\t}\n\t}\n\n\treturn finalInt\n}\n\nfunc main() {\n\tresult := stringToInt(\"230500\")\n\tfmt.Println(result)\n\tfmt.Println(reflect.TypeOf(result))\n}\n</code></pre>\n","markdown":"\n## Write a program to convert a string to an integer (without using built-in functions)\n\n```\nInput  : \"123\"\nOutput : 123\n```\n\n---\n\n<CodeBlock slug=\"convert-a-string-to-an-integer-(without-using-built-in-functions)\" >\n\n```js\nfunction convertStringToInteger(str) {\n  let [isNegative, result, num] = [false, str, 0];\n\n  if (result[0] === '-') {\n    isNegative = true;\n    result = result.slice(1);\n  }\n\n  for (let i = 0; i < result.length; i += 1) {\n    const charCode = result.charCodeAt(i) - 48;\n    const pow = 10 ** (result.length - i - 1);\n    num += charCode * pow;\n  }\n\n  return isNegative ? num * -1 : num;\n}\n\nconst str = '123';\nconsole.log(`Input: ${str}, type: ${typeof str}`);\nconsole.log(`Output: ${convertStringToInteger(str)}, type: ${typeof convertStringToInteger(str)}`);\n\nconst strWithNegative = '-123';\nconsole.log(`Input: ${strWithNegative}, type: ${typeof strWithNegative}`);\nconsole.log(`Output: ${convertStringToInteger(strWithNegative)}, type: ${typeof convertStringToInteger(strWithNegative)}`);\n```\n\n```ts\n/**\n * This function converts a string to an integer without using built-in functions with respect to the negative sign and the decimal point\n * @param {string} str - The string to be converted\n * @returns {number} - The converted integer\n * @example\n * convertStringToInteger(\"123\") // returns 123\n * convertStringToInteger(\"123.45\") // returns 123\n * \n * \n * @author [Ahmed Eltaher](https://github.com/ahmedheltaher)\n * \n */\nfunction convertStringToInteger(str: string): number {\n\tlet isNegative = false;\n\tif (str[0] === \"-\") {\n\t\tisNegative = true;\n\t\tstr = str.slice(1);\n\t}\n\tif (str.indexOf(\".\") !== -1) {\n\t\tstr = str.slice(0, str.indexOf(\".\"));\n\t}\n\n\t// Convert the string to an integer\n\tlet num = 0;\n\tfor (let i = 0; i < str.length; i++) {\n\t\tnum += (str.charCodeAt(i) - 48) * Math.pow(10, str.length - i - 1);\n\t}\n\n\t// Handle negative numbers\n\treturn num * (isNegative ? -1 : 1);\n}\n```\n\n```py\n# -*- coding: utf-8 -*-\r\n\"\"\"\r\nCreated on Sun Oct  9 16:08:39 2022\r\n\r\n@author: smiti\r\n\"\"\"\r\n\r\n# Python3 program to convert a string to an integer (without using built-in functions)\r\n\r\n\r\ndef convert(s: str) -> int:  # function that will do the needful\r\n\r\n    num = 0  # Initialize an integer variable\r\n\r\n    # Iterate through all the characters of the string\r\n    for i in s:\r\n        # Subtract ascii value of 0 from the current digit\r\n        num = num * 10 + (ord(i) - ord(\"0\"))\r\n\r\n    return num  # return the ans\r\n\r\n\r\n# Take input:\r\nprint(convert(\"123\"))\n```\n\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"math\"\n\t\"reflect\"\n)\n\n// Returns the passed number string as int. If the provided string isn't right it returns -1\nfunc stringToInt(str string) int {\n\tvar finalInt int = 0\n\n\tfor i := len(str) - 1; i >= 0; i-- {\n\t\tif str[i] >= 48 && str[i] <= 57 {\n\t\t\tpower := float64(len(str) - i - 1)\n\t\t\tfinalInt += int(str[i]-48) * int(math.Pow(10, power))\n\t\t} else {\n\t\t\treturn -1\n\t\t}\n\t}\n\n\treturn finalInt\n}\n\nfunc main() {\n\tresult := stringToInt(\"230500\")\n\tfmt.Println(result)\n\tfmt.Println(reflect.TypeOf(result))\n}\n```\n\n</CodeBlock>\n\n","latestUpdateDate":"2022-12-02T06:03:31Z"}